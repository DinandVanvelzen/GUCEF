#-------------------------------------------------------------------
# This file was automatically generated by ProjectGenerator
# which is tooling part the build system designed for GUCEF
#     (Galaxy Unlimited Framework)
# For the latest info, see http://www.VanvelzenSoftware.com/
#
# The contents of this file are placed in the public domain. Feel
# free to make use of it in any way you like.
#-------------------------------------------------------------------
#

# Configuration for module: OIS



if (IPHONEOS)
  set( PLATFORM_HEADER_FILES 
    includes/iphone/iPhoneAccelerometer.h
    includes/iphone/iPhoneHelpers.h
    includes/iphone/iPhoneInputManager.h
    includes/iphone/iPhoneMultiTouch.h
    includes/iphone/iPhonePrereqs.h
  )

  set( PLATFORM_HEADER_INSTALL "IPHONEOS" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    src/OISEffect.cpp
    src/OISException.cpp
    src/OISForceFeedback.cpp
    src/OISInputManager.cpp
    src/OISJoyStick.cpp
    src/OISKeyboard.cpp
    src/OISObject.cpp
    src/extras/LIRC/OISLIRC.cpp
    src/extras/LIRC/OISLIRCFactoryCreator.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "IPHONEOS" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (LINUX)
  set( PLATFORM_HEADER_FILES 
    includes/OIS.h
    includes/OISConfig.h
    includes/OISEffect.h
    includes/OISEvents.h
    includes/OISException.h
    includes/OISFactoryCreator.h
    includes/OISForceFeedback.h
    includes/OISInputManager.h
    includes/OISInterface.h
    includes/OISJoyStick.h
    includes/OISKeyboard.h
    includes/OISMouse.h
    includes/OISMultiTouch.h
    includes/OISObject.h
    includes/OISPrereqs.h
    includes/linux/EventHelpers.h
    includes/linux/LinuxForceFeedback.h
    includes/linux/LinuxInputManager.h
    includes/linux/LinuxJoyStickEvents.h
    includes/linux/LinuxKeyboard.h
    includes/linux/LinuxMouse.h
    includes/linux/LinuxPrereqs.h
    src/extras/LIRC/OISLIRC.h
    src/extras/LIRC/OISLIRCFactoryCreator.h
    src/extras/LIRC/OISLIRCRingBuffer.h
  )

  set( PLATFORM_HEADER_INSTALL "LINUX" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    src/OISEffect.cpp
    src/OISException.cpp
    src/OISForceFeedback.cpp
    src/OISInputManager.cpp
    src/OISJoyStick.cpp
    src/OISKeyboard.cpp
    src/OISObject.cpp
    src/extras/LIRC/OISLIRC.cpp
    src/extras/LIRC/OISLIRCFactoryCreator.cpp
    src/linux/EventHelpers.cpp
    src/linux/LinuxForceFeedback.cpp
    src/linux/LinuxInputManager.cpp
    src/linux/LinuxJoyStickEvents.cpp
    src/linux/LinuxKeyboard.cpp
    src/linux/LinuxMouse.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "LINUX" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (OSX)
  set( PLATFORM_HEADER_FILES 
    includes/OIS.h
    includes/OISConfig.h
    includes/OISEffect.h
    includes/OISEvents.h
    includes/OISException.h
    includes/OISFactoryCreator.h
    includes/OISForceFeedback.h
    includes/OISInputManager.h
    includes/OISInterface.h
    includes/OISJoyStick.h
    includes/OISKeyboard.h
    includes/OISMouse.h
    includes/OISMultiTouch.h
    includes/OISObject.h
    includes/OISPrereqs.h
    includes/mac/MacHelpers.h
    includes/mac/MacHIDManager.h
    includes/mac/MacInputManager.h
    includes/mac/MacJoyStick.h
    includes/mac/MacKeyboard.h
    includes/mac/MacMouse.h
    includes/mac/MacPrereqs.h
    src/extras/LIRC/OISLIRC.h
    src/extras/LIRC/OISLIRCFactoryCreator.h
    src/extras/LIRC/OISLIRCRingBuffer.h
  )

  set( PLATFORM_HEADER_INSTALL "OSX" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    src/OISEffect.cpp
    src/OISException.cpp
    src/OISForceFeedback.cpp
    src/OISInputManager.cpp
    src/OISJoyStick.cpp
    src/OISKeyboard.cpp
    src/OISObject.cpp
    src/extras/LIRC/OISLIRC.cpp
    src/extras/LIRC/OISLIRCFactoryCreator.cpp
    src/mac/MacHelpers.cpp
    src/mac/MacHIDManager.cpp
    src/mac/MacInputManager.cpp
    src/mac/MacJoyStick.cpp
    src/mac/MacKeyboard.cpp
    src/mac/MacMouse.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "OSX" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (SDL)
  set( PLATFORM_HEADER_FILES 
    includes/SDL/SDLInputManager.h
    includes/SDL/SDLJoyStick.h
    includes/SDL/SDLKeyboard.h
    includes/SDL/SDLMouse.h
    includes/SDL/SDLPrereqs.h
  )

  set( PLATFORM_HEADER_INSTALL "SDL" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    src/OISEffect.cpp
    src/OISException.cpp
    src/OISForceFeedback.cpp
    src/OISInputManager.cpp
    src/OISJoyStick.cpp
    src/OISKeyboard.cpp
    src/OISObject.cpp
    src/SDL/SDLInputManager.cpp
    src/SDL/SDLJoyStick.cpp
    src/SDL/SDLKeyboard.cpp
    src/SDL/SDLMouse.cpp
    src/extras/LIRC/OISLIRC.cpp
    src/extras/LIRC/OISLIRCFactoryCreator.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "SDL" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (WIN32)
  set( PLATFORM_HEADER_FILES 
    includes/OIS.h
    includes/OISConfig.h
    includes/OISEffect.h
    includes/OISEvents.h
    includes/OISException.h
    includes/OISFactoryCreator.h
    includes/OISForceFeedback.h
    includes/OISInputManager.h
    includes/OISInterface.h
    includes/OISJoyStick.h
    includes/OISKeyboard.h
    includes/OISMouse.h
    includes/OISMultiTouch.h
    includes/OISObject.h
    includes/OISPrereqs.h
    includes/win32/Win32ForceFeedback.h
    includes/win32/Win32InputManager.h
    includes/win32/Win32JoyStick.h
    includes/win32/Win32KeyBoard.h
    includes/win32/Win32Mouse.h
    includes/win32/Win32Prereqs.h
    src/extras/LIRC/OISLIRC.h
    src/extras/LIRC/OISLIRCFactoryCreator.h
    src/extras/LIRC/OISLIRCRingBuffer.h
  )

  set( PLATFORM_HEADER_INSTALL "WIN32" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    src/OISEffect.cpp
    src/OISException.cpp
    src/OISForceFeedback.cpp
    src/OISInputManager.cpp
    src/OISJoyStick.cpp
    src/OISKeyboard.cpp
    src/OISObject.cpp
    src/extras/LIRC/OISLIRC.cpp
    src/extras/LIRC/OISLIRCFactoryCreator.cpp
    src/win32/Win32ForceFeedback.cpp
    src/win32/Win32InputManager.cpp
    src/win32/Win32JoyStick.cpp
    src/win32/Win32KeyBoard.cpp
    src/win32/Win32Mouse.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "WIN32" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (WIN64)
  set( PLATFORM_HEADER_FILES 
    includes/OIS.h
    includes/OISConfig.h
    includes/OISEffect.h
    includes/OISEvents.h
    includes/OISException.h
    includes/OISFactoryCreator.h
    includes/OISForceFeedback.h
    includes/OISInputManager.h
    includes/OISInterface.h
    includes/OISJoyStick.h
    includes/OISKeyboard.h
    includes/OISMouse.h
    includes/OISMultiTouch.h
    includes/OISObject.h
    includes/OISPrereqs.h
    src/extras/LIRC/OISLIRC.h
    src/extras/LIRC/OISLIRCFactoryCreator.h
    src/extras/LIRC/OISLIRCRingBuffer.h
  )

  set( PLATFORM_HEADER_INSTALL "WIN64" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    src/OISEffect.cpp
    src/OISException.cpp
    src/OISForceFeedback.cpp
    src/OISInputManager.cpp
    src/OISJoyStick.cpp
    src/OISKeyboard.cpp
    src/OISObject.cpp
    src/extras/LIRC/OISLIRC.cpp
    src/extras/LIRC/OISLIRCFactoryCreator.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "WIN64" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

endif ()

# For ease of use make a variable that has all files for this module
set( ALL_FILES ${HEADER_FILES} ${SOURCE_FILES} ${PLATFORM_HEADER_FILES} ${PLATFORM_SOURCE_FILES} )


if( LINUX )
  set( MODULE_NAME "OIS" )
elseif( OSX )
  set( MODULE_NAME "OIS" )
elseif( WIN32 )
  set( MODULE_NAME "OIS" )
elseif( WIN64 )
  set( MODULE_NAME "OIS" )
endif()
if( LINUX )
  add_library( ${MODULE_NAME} ${ALL_FILES} )
elseif( OSX )
  add_library( ${MODULE_NAME} ${ALL_FILES} )
elseif( WIN32 )
  add_library( ${MODULE_NAME} ${ALL_FILES} )
elseif( WIN64 )
  add_library( ${MODULE_NAME} ${ALL_FILES} )
endif()

if ( LINUX )
  set_target_properties( ${MODULE_NAME} PROPERTIES COMPILE_DEFINITIONS "OIS_LINUX_PLATFORM;OIS_DYNAMIC_LIB;OIS_NONCLIENT_BUILD" )
endif( LINUX )

if ( OSX )
  set_target_properties( ${MODULE_NAME} PROPERTIES COMPILE_DEFINITIONS "OIS_DYNAMIC_LIB;OIS_NONCLIENT_BUILD;OIS_APPLE_PLATFORM" )
endif( OSX )

if ( WIN32 )
  target_link_libraries( ${MODULE_NAME} dxguid.lib dinput8.lib )
  set_target_properties( ${MODULE_NAME} PROPERTIES COMPILE_DEFINITIONS "OIS_DYNAMIC_LIB;OIS_NONCLIENT_BUILD" )
endif( WIN32 )

if ( WIN64 )
  target_link_libraries( ${MODULE_NAME} dxguid.lib dinput8.lib )
  set_target_properties( ${MODULE_NAME} PROPERTIES COMPILE_DEFINITIONS "OIS_DYNAMIC_LIB;OIS_NONCLIENT_BUILD" )
endif( WIN64 )

if ( IPHONEOS )
  include_directories( includes/iphone )
endif( IPHONEOS )

if ( LINUX )
  include_directories( includes includes/linux src/extras/LIRC )
endif( LINUX )

if ( OSX )
  include_directories( includes includes/mac src/extras/LIRC )
endif( OSX )

if ( SDL )
  include_directories( includes/SDL )
endif( SDL )

if ( WIN32 )
  include_directories( includes includes/win32 src/extras/LIRC )
endif( WIN32 )

if ( WIN64 )
  include_directories( includes src/extras/LIRC )
endif( WIN64 )



#******** START OF AUTOGENERATED TEMPLATED ADDITION CONTENT ********




if (LINUX)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (OSX)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (WIN32)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (WIN64)
GUCEF_config_lib( ${MODULE_NAME} )
endif()



#******** END OF AUTOGENERATED TEMPLATED ADDITION CONTENT ********


