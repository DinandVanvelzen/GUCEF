#-------------------------------------------------------------------
# This file was automatically generated by ProjectGenerator
# which is tooling part the build system designed for GUCEF
#     (Galaxy Unlimited Framework)
# For the latest info, see http://www.VanvelzenSoftware.com/
#
# The contents of this file are placed in the public domain. Feel
# free to make use of it in any way you like.
#-------------------------------------------------------------------
#

# Configuration for module: gucefLOADER

set( HEADER_FILES 
  ../gucefCORE/include/DVOSWRAP.h
  ../gucefCORE/include/dvstrutils.h
  ../gucefCORE/include/CDVString.h
  ../gucefCORE/include/dvfileutils.h
  ../gucefCORE/include/dvcppstringutils.h
  ../gucefCORE/include/md5.h
  ../gucefCORE/include/dvmd5utils.h
  include/gucefLOADER.h
  include/gucefLOADER_config.h
  include/gucefLOADER_ETypes.h
  include/gucefLOADER_macros.h
)

set( SOURCE_FILES 
  ../gucefCORE/src/DVOSWRAP.c
  ../gucefCORE/src/dvstrutils.c
  ../gucefCORE/src/CDVString.cpp
  ../gucefCORE/src/dvfileutils.c
  ../gucefCORE/src/dvcppstringutils.cpp
  ../gucefCORE/src/md5.c
  ../gucefCORE/src/dvmd5utils.c
  src/gucefLOADER.cpp
)



if (ANDROID)
  set( PLATFORM_HEADER_FILES 
    ../gucefCORE/include/DVOSWRAP.h
    ../gucefCORE/include/dvstrutils.h
    ../gucefCORE/include/CDVString.h
    ../gucefCORE/include/dvfileutils.h
    ../gucefCORE/include/dvcppstringutils.h
    ../gucefCORE/include/md5.h
    ../gucefCORE/include/dvmd5utils.h
  )

  set( PLATFORM_HEADER_INSTALL "ANDROID" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    ../gucefCORE/src/DVOSWRAP.c
    ../gucefCORE/src/dvstrutils.c
    ../gucefCORE/src/CDVString.cpp
    ../gucefCORE/src/dvfileutils.c
    ../gucefCORE/src/dvcppstringutils.cpp
    ../gucefCORE/src/md5.c
    ../gucefCORE/src/dvmd5utils.c
  )

  set( PLATFORM_SOURCE_INSTALL "ANDROID" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (GLX)
  set( PLATFORM_HEADER_FILES 
    ../gucefCORE/include/DVOSWRAP.h
    ../gucefCORE/include/dvstrutils.h
    ../gucefCORE/include/CDVString.h
    ../gucefCORE/include/dvfileutils.h
    ../gucefCORE/include/dvcppstringutils.h
    ../gucefCORE/include/md5.h
    ../gucefCORE/include/dvmd5utils.h
  )

  set( PLATFORM_HEADER_INSTALL "GLX" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    ../gucefCORE/src/DVOSWRAP.c
    ../gucefCORE/src/dvstrutils.c
    ../gucefCORE/src/CDVString.cpp
    ../gucefCORE/src/dvfileutils.c
    ../gucefCORE/src/dvcppstringutils.cpp
    ../gucefCORE/src/md5.c
    ../gucefCORE/src/dvmd5utils.c
  )

  set( PLATFORM_SOURCE_INSTALL "GLX" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (GTK)
  set( PLATFORM_HEADER_FILES 
    ../gucefCORE/include/DVOSWRAP.h
    ../gucefCORE/include/dvstrutils.h
    ../gucefCORE/include/CDVString.h
    ../gucefCORE/include/dvfileutils.h
    ../gucefCORE/include/dvcppstringutils.h
    ../gucefCORE/include/md5.h
    ../gucefCORE/include/dvmd5utils.h
  )

  set( PLATFORM_HEADER_INSTALL "GTK" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    ../gucefCORE/src/DVOSWRAP.c
    ../gucefCORE/src/dvstrutils.c
    ../gucefCORE/src/CDVString.cpp
    ../gucefCORE/src/dvfileutils.c
    ../gucefCORE/src/dvcppstringutils.cpp
    ../gucefCORE/src/md5.c
    ../gucefCORE/src/dvmd5utils.c
  )

  set( PLATFORM_SOURCE_INSTALL "GTK" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (IPHONEOS)
  set( PLATFORM_HEADER_FILES 
    ../gucefCORE/include/DVOSWRAP.h
    ../gucefCORE/include/dvstrutils.h
    ../gucefCORE/include/CDVString.h
    ../gucefCORE/include/dvfileutils.h
    ../gucefCORE/include/dvcppstringutils.h
    ../gucefCORE/include/md5.h
    ../gucefCORE/include/dvmd5utils.h
  )

  set( PLATFORM_HEADER_INSTALL "IPHONEOS" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    ../gucefCORE/src/DVOSWRAP.c
    ../gucefCORE/src/dvstrutils.c
    ../gucefCORE/src/CDVString.cpp
    ../gucefCORE/src/dvfileutils.c
    ../gucefCORE/src/dvcppstringutils.cpp
    ../gucefCORE/src/md5.c
    ../gucefCORE/src/dvmd5utils.c
  )

  set( PLATFORM_SOURCE_INSTALL "IPHONEOS" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (LINUX)
  set( PLATFORM_HEADER_FILES 
    ../gucefCORE/include/DVOSWRAP.h
    ../gucefCORE/include/dvstrutils.h
    ../gucefCORE/include/CDVString.h
    ../gucefCORE/include/dvfileutils.h
    ../gucefCORE/include/dvcppstringutils.h
    ../gucefCORE/include/md5.h
    ../gucefCORE/include/dvmd5utils.h
  )

  set( PLATFORM_HEADER_INSTALL "LINUX" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    ../gucefCORE/src/DVOSWRAP.c
    ../gucefCORE/src/dvstrutils.c
    ../gucefCORE/src/CDVString.cpp
    ../gucefCORE/src/dvfileutils.c
    ../gucefCORE/src/dvcppstringutils.cpp
    ../gucefCORE/src/md5.c
    ../gucefCORE/src/dvmd5utils.c
  )

  set( PLATFORM_SOURCE_INSTALL "LINUX" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (OSX)
  set( PLATFORM_HEADER_FILES 
    ../gucefCORE/include/DVOSWRAP.h
    ../gucefCORE/include/dvstrutils.h
    ../gucefCORE/include/CDVString.h
    ../gucefCORE/include/dvfileutils.h
    ../gucefCORE/include/dvcppstringutils.h
    ../gucefCORE/include/md5.h
    ../gucefCORE/include/dvmd5utils.h
  )

  set( PLATFORM_HEADER_INSTALL "OSX" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    ../gucefCORE/src/DVOSWRAP.c
    ../gucefCORE/src/dvstrutils.c
    ../gucefCORE/src/CDVString.cpp
    ../gucefCORE/src/dvfileutils.c
    ../gucefCORE/src/dvcppstringutils.cpp
    ../gucefCORE/src/md5.c
    ../gucefCORE/src/dvmd5utils.c
  )

  set( PLATFORM_SOURCE_INSTALL "OSX" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (SDL)
  set( PLATFORM_HEADER_FILES 
    ../gucefCORE/include/DVOSWRAP.h
    ../gucefCORE/include/dvstrutils.h
    ../gucefCORE/include/CDVString.h
    ../gucefCORE/include/dvfileutils.h
    ../gucefCORE/include/dvcppstringutils.h
    ../gucefCORE/include/md5.h
    ../gucefCORE/include/dvmd5utils.h
  )

  set( PLATFORM_HEADER_INSTALL "SDL" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    ../gucefCORE/src/DVOSWRAP.c
    ../gucefCORE/src/dvstrutils.c
    ../gucefCORE/src/CDVString.cpp
    ../gucefCORE/src/dvfileutils.c
    ../gucefCORE/src/dvcppstringutils.cpp
    ../gucefCORE/src/md5.c
    ../gucefCORE/src/dvmd5utils.c
  )

  set( PLATFORM_SOURCE_INSTALL "SDL" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (SYMBIAN)
  set( PLATFORM_HEADER_FILES 
    ../gucefCORE/include/DVOSWRAP.h
    ../gucefCORE/include/dvstrutils.h
    ../gucefCORE/include/CDVString.h
    ../gucefCORE/include/dvfileutils.h
    ../gucefCORE/include/dvcppstringutils.h
    ../gucefCORE/include/md5.h
    ../gucefCORE/include/dvmd5utils.h
  )

  set( PLATFORM_HEADER_INSTALL "SYMBIAN" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    ../gucefCORE/src/DVOSWRAP.c
    ../gucefCORE/src/dvstrutils.c
    ../gucefCORE/src/CDVString.cpp
    ../gucefCORE/src/dvfileutils.c
    ../gucefCORE/src/dvcppstringutils.cpp
    ../gucefCORE/src/md5.c
    ../gucefCORE/src/dvmd5utils.c
  )

  set( PLATFORM_SOURCE_INSTALL "SYMBIAN" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (UNIX)
  set( PLATFORM_HEADER_FILES 
    ../gucefCORE/include/DVOSWRAP.h
    ../gucefCORE/include/dvstrutils.h
    ../gucefCORE/include/CDVString.h
    ../gucefCORE/include/dvfileutils.h
    ../gucefCORE/include/dvcppstringutils.h
    ../gucefCORE/include/md5.h
    ../gucefCORE/include/dvmd5utils.h
  )

  set( PLATFORM_HEADER_INSTALL "UNIX" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    ../gucefCORE/src/DVOSWRAP.c
    ../gucefCORE/src/dvstrutils.c
    ../gucefCORE/src/CDVString.cpp
    ../gucefCORE/src/dvfileutils.c
    ../gucefCORE/src/dvcppstringutils.cpp
    ../gucefCORE/src/md5.c
    ../gucefCORE/src/dvmd5utils.c
  )

  set( PLATFORM_SOURCE_INSTALL "UNIX" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (WIN32)
  set( PLATFORM_HEADER_FILES 
    ../gucefCORE/include/DVOSWRAP.h
    ../gucefCORE/include/dvstrutils.h
    ../gucefCORE/include/CDVString.h
    ../gucefCORE/include/dvfileutils.h
    ../gucefCORE/include/dvcppstringutils.h
    ../gucefCORE/include/md5.h
    ../gucefCORE/include/dvmd5utils.h
  )

  set( PLATFORM_HEADER_INSTALL "WIN32" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    ../gucefCORE/src/DVOSWRAP.c
    ../gucefCORE/src/dvstrutils.c
    ../gucefCORE/src/CDVString.cpp
    ../gucefCORE/src/dvfileutils.c
    ../gucefCORE/src/dvcppstringutils.cpp
    ../gucefCORE/src/md5.c
    ../gucefCORE/src/dvmd5utils.c
  )

  set( PLATFORM_SOURCE_INSTALL "WIN32" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (WIN64)
  set( PLATFORM_HEADER_FILES 
    ../gucefCORE/include/DVOSWRAP.h
    ../gucefCORE/include/dvstrutils.h
    ../gucefCORE/include/CDVString.h
    ../gucefCORE/include/dvfileutils.h
    ../gucefCORE/include/dvcppstringutils.h
    ../gucefCORE/include/md5.h
    ../gucefCORE/include/dvmd5utils.h
  )

  set( PLATFORM_HEADER_INSTALL "WIN64" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    ../gucefCORE/src/DVOSWRAP.c
    ../gucefCORE/src/dvstrutils.c
    ../gucefCORE/src/CDVString.cpp
    ../gucefCORE/src/dvfileutils.c
    ../gucefCORE/src/dvcppstringutils.cpp
    ../gucefCORE/src/md5.c
    ../gucefCORE/src/dvmd5utils.c
  )

  set( PLATFORM_SOURCE_INSTALL "WIN64" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

endif ()

# For ease of use make a variable that has all files for this module
set( ALL_FILES ${HEADER_FILES} ${SOURCE_FILES} ${PLATFORM_HEADER_FILES} ${PLATFORM_SOURCE_FILES} )

set( MODULE_NAME "gucefLOADER" )
add_library( ${MODULE_NAME} ${ALL_FILES} )
add_dependencies( ${MODULE_NAME} gucefMT gucefCORE )
set_target_properties( ${MODULE_NAME} PROPERTIES COMPILE_DEFINITIONS "GUCEF_MT_EMBED_CODE;GUCEF_CORE_EMBED_CODE;GUCEF_LOADER_BUILD_MODULE" )

if ( ANDROID )
  target_link_libraries( ${MODULE_NAME} dl )
endif( ANDROID )

include_directories( ../common/include ../gucefCORE/include ../gucefMT/include ../gucefCORE/include/ include )

if ( ANDROID )
  include_directories( ../gucefCORE/include/android ../gucefCORE/include/ )
endif( ANDROID )

if ( GLX )
  include_directories( ../gucefCORE/include/ )
endif( GLX )

if ( GTK )
  include_directories( ../gucefCORE/include/ )
endif( GTK )

if ( IPHONEOS )
  include_directories( ../gucefCORE/include/ )
endif( IPHONEOS )

if ( LINUX )
  include_directories( ../gucefCORE/include/linux ../gucefCORE/include/ )
endif( LINUX )

if ( OSX )
  include_directories( ../gucefCORE/include/ )
endif( OSX )

if ( SDL )
  include_directories( ../gucefCORE/include/ )
endif( SDL )

if ( SYMBIAN )
  include_directories( ../gucefCORE/include/ )
endif( SYMBIAN )

if ( UNIX )
  include_directories( ../gucefCORE/include/ )
endif( UNIX )

if ( WIN32 )
  include_directories( ../gucefCORE/include/mswin ../gucefCORE/include/ )
endif( WIN32 )

if ( WIN64 )
  include_directories( ../gucefCORE/include/mswin ../gucefCORE/include/ )
endif( WIN64 )



#******** START OF AUTOGENERATED TEMPLATED ADDITION CONTENT ********




if (ANDROID)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (GLX)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (GTK)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (IPHONEOS)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (LINUX)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (OSX)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (SDL)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (SYMBIAN)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (UNIX)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (WIN32)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (WIN64)
GUCEF_config_lib( ${MODULE_NAME} )
else()
GUCEF_config_lib( ${MODULE_NAME} )
endif()



#******** END OF AUTOGENERATED TEMPLATED ADDITION CONTENT ********


