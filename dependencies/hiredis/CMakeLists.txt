#-------------------------------------------------------------------
# This file was automatically generated by ProjectGenerator
# which is tooling part the build system designed for GUCEF
#     (Galaxy Unlimited Framework)
# For the latest info, see http://www.VanvelzenSoftware.com/
#
# The contents of this file are placed in the public domain. Feel
# free to make use of it in any way you like.
#-------------------------------------------------------------------
#

# Configuration for module: hiredis

set( SOURCE_FILES 
  async.c
  dict.c
  hiredis.c
  net.c
  read.c
  sds.c
  sockcompat.c
)



if (ANDROID)
  set( PLATFORM_SOURCE_FILES 
    async.c
    dict.c
    hiredis.c
    net.c
    read.c
    sds.c
    sockcompat.c
  )

  set( PLATFORM_SOURCE_INSTALL "ANDROID" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (EMSCRIPTEN)
  set( PLATFORM_SOURCE_FILES 
    async.c
    dict.c
    hiredis.c
    net.c
    read.c
    sds.c
    sockcompat.c
  )

  set( PLATFORM_SOURCE_INSTALL "EMSCRIPTEN" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (GLX)
  set( PLATFORM_SOURCE_FILES 
    async.c
    dict.c
    hiredis.c
    net.c
    read.c
    sds.c
    sockcompat.c
  )

  set( PLATFORM_SOURCE_INSTALL "GLX" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (GTK)
  set( PLATFORM_SOURCE_FILES 
    async.c
    dict.c
    hiredis.c
    net.c
    read.c
    sds.c
    sockcompat.c
  )

  set( PLATFORM_SOURCE_INSTALL "GTK" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (IOS)
  set( PLATFORM_SOURCE_FILES 
    async.c
    dict.c
    hiredis.c
    net.c
    read.c
    sds.c
    sockcompat.c
  )

  set( PLATFORM_SOURCE_INSTALL "IOS" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (LINUX32)
  set( PLATFORM_SOURCE_FILES 
    async.c
    dict.c
    hiredis.c
    net.c
    read.c
    sds.c
    sockcompat.c
  )

  set( PLATFORM_SOURCE_INSTALL "LINUX32" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (LINUX64)
  set( PLATFORM_SOURCE_FILES 
    async.c
    dict.c
    hiredis.c
    net.c
    read.c
    sds.c
    sockcompat.c
  )

  set( PLATFORM_SOURCE_INSTALL "LINUX64" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (NACL)
  set( PLATFORM_SOURCE_FILES 
    async.c
    dict.c
    hiredis.c
    net.c
    read.c
    sds.c
    sockcompat.c
  )

  set( PLATFORM_SOURCE_INSTALL "NACL" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (OSX)
  set( PLATFORM_SOURCE_FILES 
    async.c
    dict.c
    hiredis.c
    net.c
    read.c
    sds.c
    sockcompat.c
  )

  set( PLATFORM_SOURCE_INSTALL "OSX" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (SDL)
  set( PLATFORM_SOURCE_FILES 
    async.c
    dict.c
    hiredis.c
    net.c
    read.c
    sds.c
    sockcompat.c
  )

  set( PLATFORM_SOURCE_INSTALL "SDL" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (SYMBIAN)
  set( PLATFORM_SOURCE_FILES 
    async.c
    dict.c
    hiredis.c
    net.c
    read.c
    sds.c
    sockcompat.c
  )

  set( PLATFORM_SOURCE_INSTALL "SYMBIAN" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (UNIX)
  set( PLATFORM_SOURCE_FILES 
    async.c
    dict.c
    hiredis.c
    net.c
    read.c
    sds.c
    sockcompat.c
  )

  set( PLATFORM_SOURCE_INSTALL "UNIX" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (WIN32)
  set( PLATFORM_SOURCE_FILES 
    async.c
    dict.c
    hiredis.c
    net.c
    read.c
    sds.c
    sockcompat.c
  )

  set( PLATFORM_SOURCE_INSTALL "WIN32" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (WIN64)
  set( PLATFORM_SOURCE_FILES 
    async.c
    dict.c
    hiredis.c
    net.c
    read.c
    sds.c
    sockcompat.c
  )

  set( PLATFORM_SOURCE_INSTALL "WIN64" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

endif ()

# Make sure the PLATFORM_HEADER_FILES variable is always defined
 set( PLATFORM_HEADER_FILES "" )

# For ease of use make a variable that has all files for this module
set( ALL_FILES ${HEADER_FILES} ${SOURCE_FILES} ${PLATFORM_HEADER_FILES} ${PLATFORM_SOURCE_FILES} )

set( MODULE_NAME "hiredis" )
add_library( ${MODULE_NAME} ${ALL_FILES} )

if ( WIN32 )
  target_link_libraries( ${MODULE_NAME} ws2_32 )
endif( WIN32 )

if ( WIN64 )
  target_link_libraries( ${MODULE_NAME} ws2_32 )
endif( WIN64 )




#******** START OF AUTOGENERATED TEMPLATED ADDITION CONTENT ********




if (ANDROID)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (EMSCRIPTEN)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (GLX)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (GTK)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (IOS)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (LINUX32)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (LINUX64)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (NACL)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (OSX)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (SDL)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (SYMBIAN)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (UNIX)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (WIN32)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (WIN64)
GUCEF_config_lib( ${MODULE_NAME} )
else()
GUCEF_config_lib( ${MODULE_NAME} )
endif()



#******** END OF AUTOGENERATED TEMPLATED ADDITION CONTENT ********


