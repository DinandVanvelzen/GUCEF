#-------------------------------------------------------------------
# This file was automatically generated by ProjectGenerator
# which is tooling part the build system designed for GUCEF
#     (Galaxy Unlimited Framework)
# For the latest info, see http://www.VanvelzenSoftware.com/
#
# The contents of this file are placed in the public domain. Feel
# free to make use of it in any way you like.
#-------------------------------------------------------------------
#

# Configuration for module: RdKafka

set( HEADER_FILES 
  crc32c.h
  lz4.h
  lz4frame.h
  lz4frame_static.h
  lz4hc.h
  lz4opt.h
  queue.h
  rd.h
  rdaddr.h
  rdatomic.h
  rdavg.h
  rdavl.h
  rdbuf.h
  rdcrc32.h
  rddl.h
  rdendian.h
  rdfloat.h
  rdgz.h
  rdhdrhistogram.h
  rdinterval.h
  rdkafka.h
  rdkafka_admin.h
  rdkafka_assignor.h
  rdkafka_aux.h
  rdkafka_broker.h
  rdkafka_buf.h
  rdkafka_cert.h
  rdkafka_cgrp.h
  rdkafka_conf.h
  rdkafka_confval.h
  rdkafka_event.h
  rdkafka_feature.h
  rdkafka_header.h
  rdkafka_idempotence.h
  rdkafka_int.h
  rdkafka_interceptor.h
  rdkafka_lz4.h
  rdkafka_metadata.h
  rdkafka_msg.h
  rdkafka_msgbatch.h
  rdkafka_msgset.h
  rdkafka_offset.h
  rdkafka_op.h
  rdkafka_partition.h
  rdkafka_pattern.h
  rdkafka_plugin.h
  rdkafka_proto.h
  rdkafka_queue.h
  rdkafka_request.h
  rdkafka_sasl.h
  rdkafka_sasl_int.h
  rdkafka_sasl_oauthbearer.h
  rdkafka_ssl.h
  rdkafka_timer.h
  rdkafka_topic.h
  rdkafka_transport.h
  rdkafka_transport_int.h
  rdkafka_zstd.h
  rdlist.h
  rdlog.h
  rdmurmur2.h
  rdports.h
  rdposix.h
  rdrand.h
  rdregex.h
  rdsignal.h
  rdstring.h
  rdsysqueue.h
  rdtime.h
  rdtypes.h
  rdunittest.h
  rdvarint.h
  rdwin32.h
  regexp.h
  snappy.h
  snappy_compat.h
  tinycthread.h
  tinycthread_extra.h
  win32_config.h
  xxhash.h
)

set( SOURCE_FILES 
  crc32c.c
  lz4.c
  lz4frame.c
  lz4hc.c
  rdaddr.c
  rdavl.c
  rdbuf.c
  rdcrc32.c
  rddl.c
  rdgz.c
  rdhdrhistogram.c
  rdkafka.c
  rdkafka_admin.c
  rdkafka_assignor.c
  rdkafka_aux.c
  rdkafka_background.c
  rdkafka_broker.c
  rdkafka_buf.c
  rdkafka_cert.c
  rdkafka_cgrp.c
  rdkafka_conf.c
  rdkafka_event.c
  rdkafka_feature.c
  rdkafka_header.c
  rdkafka_idempotence.c
  rdkafka_interceptor.c
  rdkafka_lz4.c
  rdkafka_metadata.c
  rdkafka_metadata_cache.c
  rdkafka_msg.c
  rdkafka_msgset_reader.c
  rdkafka_msgset_writer.c
  rdkafka_offset.c
  rdkafka_op.c
  rdkafka_partition.c
  rdkafka_pattern.c
  rdkafka_plugin.c
  rdkafka_queue.c
  rdkafka_range_assignor.c
  rdkafka_request.c
  rdkafka_roundrobin_assignor.c
  rdkafka_sasl.c
  rdkafka_sasl_cyrus.c
  rdkafka_sasl_oauthbearer.c
  rdkafka_sasl_plain.c
  rdkafka_sasl_scram.c
  rdkafka_sasl_win32.c
  rdkafka_ssl.c
  rdkafka_subscription.c
  rdkafka_timer.c
  rdkafka_topic.c
  rdkafka_transport.c
  rdkafka_zstd.c
  rdlist.c
  rdlog.c
  rdmurmur2.c
  rdports.c
  rdrand.c
  rdregex.c
  rdstring.c
  rdunittest.c
  rdvarint.c
  regexp.c
  snappy.c
  tinycthread.c
  tinycthread_extra.c
  xxhash.c
)

# Make sure the PLATFORM_HEADER_FILES variable is always defined
 set( PLATFORM_HEADER_FILES "" )

# Make sure the PLATFORM_SOURCE_FILES variable is always defined
 set( PLATFORM_SOURCE_FILES "" )

# For ease of use make a variable that has all files for this module
set( ALL_FILES ${HEADER_FILES} ${SOURCE_FILES} ${PLATFORM_HEADER_FILES} ${PLATFORM_SOURCE_FILES} )

set( MODULE_NAME "RdKafka" )
add_library( ${MODULE_NAME} ${ALL_FILES} )
add_dependencies( ${MODULE_NAME} zlib )
target_link_libraries( ${MODULE_NAME} zlib )
set_property( TARGET ${MODULE_NAME} APPEND_STRING PROPERTY COMPILE_DEFINITIONS "LIBRDKAFKACPP_EXPORTS;LIBRDKAFKA_EXPORTS" )


if ( LINUX32 )
  include_directories( ../../zlib )
endif( LINUX32 )

if ( LINUX64 )
  include_directories( ../../zlib )
endif( LINUX64 )

if ( WIN32 )
  include_directories( ../../zlib )
endif( WIN32 )

if ( WIN64 )
  include_directories( ../../zlib )
endif( WIN64 )



#******** START OF AUTOGENERATED TEMPLATED ADDITION CONTENT ********




if (LINUX32)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (LINUX64)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (OSX)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (WIN32)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (WIN64)
GUCEF_config_lib( ${MODULE_NAME} )
else()
GUCEF_config_lib( ${MODULE_NAME} )
endif()



#******** END OF AUTOGENERATED TEMPLATED ADDITION CONTENT ********


