--------------------------------------------------------------------
-- This file was automatically generated by ProjectGenerator
-- which is tooling part the build system designed for GUCEF
--     (Galaxy Unlimited Framework)
-- For the latest info, see http://www.VanvelzenSoftware.com/
--
-- The contents of this file are placed in the public domain. Feel
-- free to make use of it in any way you like.
--------------------------------------------------------------------
--

-- Configuration for module: redis-plus-plus


project( "redis-plus-plus" )

configuration( {} )
  location( os.getenv( "PM5OUTPUTDIR" ) )

configuration( {} )
  targetdir( os.getenv( "PM5TARGETDIR" ) )

configuration( {} )
language( "C++" )



configuration( {} )
kind( "StaticLib" )

configuration( {} )
links( { "hiredis" } )
links( { "hiredis" } )


configuration( {} )
defines( { "REDIS_PLUS_PLUS_BUILD_TEST=OFF", "REDIS_PLUS_PLUS_CXX_STANDARD=11" } )


configuration( {} )
vpaths { ["Headers"] = { "**.h", "**.hpp", "**.hxx" } }
files( {
  "command.h",
  "command_args.h",
  "command_options.h",
  "connection.h",
  "connection_pool.h",
  "errors.h",
  "pipeline.h",
  "queued_redis.h",
  "queued_redis.hpp",
  "redis++.h",
  "redis.h",
  "redis.hpp",
  "redis_cluster.h",
  "redis_cluster.hpp",
  "reply.h",
  "sentinel.h",
  "shards.h",
  "shards_pool.h",
  "subscriber.h",
  "transaction.h",
  "utils.h"
 } )



configuration( {} )
vpaths { ["Source"] = { "**.c", "**.cpp", "**.cs", "**.asm" } }
files( {
  "command.cpp",
  "command_options.cpp",
  "connection.cpp",
  "connection_pool.cpp",
  "crc16.cpp",
  "errors.cpp",
  "pipeline.cpp",
  "redis.cpp",
  "redis_cluster.cpp",
  "reply.cpp",
  "sentinel.cpp",
  "shards.cpp",
  "shards_pool.cpp",
  "subscriber.cpp",
  "transaction.cpp"
 } )


configuration( {} )
includedirs( { "../../../../../dependencies", "../../../../hiredis" } )

configuration( { "ANDROID" } )
includedirs( { "../../../../../dependencies/Ogre", "../../../../../dependencies/Ogre/RenderSystems", "../../../../../dependencies/Ogre/RenderSystems/GLES2", "../../../../../dependencies/Ogre/RenderSystems/GLES2/include", "../../../../../dependencies/Ogre/RenderSystems/GLES2/include/EGL", "../../../../../dependencies/Ogre/RenderSystems/GLES2/include/EGL/Android", "../../../../hiredis" } )

configuration( { "EMSCRIPTEN" } )
includedirs( { "../../../../../dependencies/Ogre", "../../../../../dependencies/Ogre/RenderSystems", "../../../../../dependencies/Ogre/RenderSystems/GLES2", "../../../../../dependencies/Ogre/RenderSystems/GLES2/include", "../../../../../dependencies/Ogre/RenderSystems/GLES2/include/EGL", "../../../../../dependencies/Ogre/RenderSystems/GLES2/include/EGL/Emscripten", "../../../../hiredis" } )

configuration( { "GLX" } )
includedirs( { "../../../../hiredis" } )

configuration( { "GTK" } )
includedirs( { "../../../../hiredis" } )

configuration( { "IOS" } )
includedirs( { "../../../../hiredis" } )

configuration( { "LINUX32" } )
includedirs( { "../../../../hiredis" } )

configuration( { "LINUX64" } )
includedirs( { "../../../../hiredis" } )

configuration( { "NACL" } )
includedirs( { "../../../../../dependencies/Ogre", "../../../../../dependencies/Ogre/RenderSystems", "../../../../../dependencies/Ogre/RenderSystems/GLES2", "../../../../../dependencies/Ogre/RenderSystems/GLES2/include", "../../../../../dependencies/Ogre/RenderSystems/GLES2/include/NaCl", "../../../../hiredis" } )

configuration( { "OSX" } )
includedirs( { "../../../../../dependencies/libRocket", "../../../../../dependencies/libRocket/Samples", "../../../../../dependencies/libRocket/Samples/shell", "../../../../../dependencies/libRocket/Samples/shell/include", "../../../../../dependencies/libRocket/Samples/shell/include/macosx", "../../../../hiredis" } )

configuration( { "POSIX" } )
includedirs( { "../../../../hiredis" } )

configuration( { "SDL" } )
includedirs( { "../../../../hiredis" } )

configuration( { "SYMBIAN" } )
includedirs( { "../../../../hiredis" } )

configuration( { "UNIX" } )
includedirs( { "../../../../hiredis" } )

configuration( { "WIN32" } )
includedirs( { "../../../../../dependencies/Ogre", "../../../../../dependencies/Ogre/RenderSystems", "../../../../../dependencies/Ogre/RenderSystems/GLES2", "../../../../../dependencies/Ogre/RenderSystems/GLES2/include", "../../../../../dependencies/Ogre/RenderSystems/GLES2/include/EGL", "../../../../../dependencies/Ogre/RenderSystems/GLES2/include/EGL/WIN32", "../../../../../dependencies/berkelium", "../../../../../dependencies/berkelium/win32", "../../../../../dependencies/berkelium/win32/demo", "../../../../../dependencies/berkelium/win32/demo/GL", "../../../../../dependencies/libRocket", "../../../../../dependencies/libRocket/Samples", "../../../../../dependencies/libRocket/Samples/shell", "../../../../../dependencies/libRocket/Samples/shell/include", "../../../../../dependencies/libRocket/Samples/shell/include/win32", "../../../../hiredis" } )

configuration( { "WIN64" } )
includedirs( { "../../../../hiredis" } )
