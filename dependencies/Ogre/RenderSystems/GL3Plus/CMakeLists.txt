#-------------------------------------------------------------------
# This file was automatically generated by ProjectGenerator
# which is tooling part the build system designed for GUCEF
#     (Galaxy Unlimited Framework)
# For the latest info, see http://www.VanvelzenSoftware.com/
#
# The contents of this file are placed in the public domain. Feel
# free to make use of it in any way you like.
#-------------------------------------------------------------------
#

# Configuration for module: OgreRenderSystem_GL3Plus

set( HEADER_FILES 
  include/OgreGL3PlusContext.h
  include/OgreGL3PlusDefaultHardwareBufferManager.h
  include/OgreGL3PlusDepthBuffer.h
  include/OgreGL3PlusFBOMultiRenderTarget.h
  include/OgreGL3PlusFBORenderTexture.h
  include/OgreGL3PlusFrameBufferObject.h
  include/OgreGL3PlusHardwareBufferManager.h
  include/OgreGL3PlusHardwareCounterBuffer.h
  include/OgreGL3PlusHardwareIndexBuffer.h
  include/OgreGL3PlusHardwareOcclusionQuery.h
  include/OgreGL3PlusHardwarePixelBuffer.h
  include/OgreGL3PlusHardwareShaderStorageBuffer.h
  include/OgreGL3PlusHardwareUniformBuffer.h
  include/OgreGL3PlusHardwareVertexBuffer.h
  include/OgreGL3PlusPixelFormat.h
  include/OgreGL3PlusPlugin.h
  include/OgreGL3PlusPrerequisites.h
  include/OgreGL3PlusRenderSystem.h
  include/OgreGL3PlusRenderTexture.h
  include/OgreGL3PlusRenderToVertexBuffer.h
  include/OgreGL3PlusSupport.h
  include/OgreGL3PlusTexture.h
  include/OgreGL3PlusTextureBuffer.h
  include/OgreGL3PlusTextureManager.h
  include/OgreGL3PlusVertexArrayObject.h
  include/GL/gl3w.h
  include/GL/glcorearb.h
  include/GL/glext.h
  include/GL/glxext.h
  include/GL/glxtokens-backup.h
  include/GL/wglext.h
  include/GLSL/OgreGLSLExtSupport.h
  include/GLSL/OgreGLSLMonolithicProgram.h
  include/GLSL/OgreGLSLMonolithicProgramManager.h
  include/GLSL/OgreGLSLPreprocessor.h
  include/GLSL/OgreGLSLProgram.h
  include/GLSL/OgreGLSLProgramManager.h
  include/GLSL/OgreGLSLSeparableProgram.h
  include/GLSL/OgreGLSLSeparableProgramManager.h
  include/GLSL/OgreGLSLShader.h
  include/GLSL/OgreGLSLShaderFactory.h
  include/GLSL/OgreGLSLShaderManager.h
)

set( SOURCE_FILES 
  src/OgreGL3PlusContext.cpp
  src/OgreGL3PlusDefaultHardwareBufferManager.cpp
  src/OgreGL3PlusDepthBuffer.cpp
  src/OgreGL3PlusEngineDll.cpp
  src/OgreGL3PlusFBOMultiRenderTarget.cpp
  src/OgreGL3PlusFBORenderTexture.cpp
  src/OgreGL3PlusFrameBufferObject.cpp
  src/OgreGL3PlusHardwareBufferManager.cpp
  src/OgreGL3PlusHardwareCounterBuffer.cpp
  src/OgreGL3PlusHardwareIndexBuffer.cpp
  src/OgreGL3PlusHardwareOcclusionQuery.cpp
  src/OgreGL3PlusHardwarePixelBuffer.cpp
  src/OgreGL3PlusHardwareShaderStorageBuffer.cpp
  src/OgreGL3PlusHardwareUniformBuffer.cpp
  src/OgreGL3PlusHardwareVertexBuffer.cpp
  src/OgreGL3PlusPixelFormat.cpp
  src/OgreGL3PlusPlugin.cpp
  src/OgreGL3PlusRenderSystem.cpp
  src/OgreGL3PlusRenderTexture.cpp
  src/OgreGL3PlusRenderToVertexBuffer.cpp
  src/OgreGL3PlusSupport.cpp
  src/OgreGL3PlusTexture.cpp
  src/OgreGL3PlusTextureBuffer.cpp
  src/OgreGL3PlusTextureManager.cpp
  src/OgreGL3PlusVertexArrayObject.cpp
  src/gl3w.cpp
  src/GLSL/OgreGLSLExtSupport.cpp
  src/GLSL/OgreGLSLMonolithicProgram.cpp
  src/GLSL/OgreGLSLMonolithicProgramManager.cpp
  src/GLSL/OgreGLSLPreprocessor.cpp
  src/GLSL/OgreGLSLProgram.cpp
  src/GLSL/OgreGLSLProgramManager.cpp
  src/GLSL/OgreGLSLSeparableProgram.cpp
  src/GLSL/OgreGLSLSeparableProgramManager.cpp
  src/GLSL/OgreGLSLShader.cpp
  src/GLSL/OgreGLSLShaderFactory.cpp
  src/GLSL/OgreGLSLShaderManager.cpp
)



if (GLX)
  set( PLATFORM_HEADER_FILES 
    include/windowing/GLX/OgreGLXContext.h
    include/windowing/GLX/OgreGLXGLSupport.h
    include/windowing/GLX/OgreGLXUtils.h
    include/windowing/GLX/OgreGLXWindow.h
    src/windowing/GLX/OgreGL3PlusUtil.h
  )

  set( PLATFORM_HEADER_INSTALL "GLX" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    src/windowing/GLX/OgreGLXContext.cpp
    src/windowing/GLX/OgreGLXGLSupport.cpp
    src/windowing/GLX/OgreGLXWindow.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "GLX" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (GTK)
  set( PLATFORM_HEADER_FILES 
    include/windowing/gtk/OgreGTKGLSupport.h
    include/windowing/gtk/OgreGTKWindow.h
    src/windowing/gtk/OgreGL3PlusUtil.h
  )

  set( PLATFORM_HEADER_INSTALL "GTK" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    src/windowing/gtk/OgreGTKGLSupport.cpp
    src/windowing/gtk/OgreGTKWindow.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "GTK" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (OSX)
  set( PLATFORM_HEADER_FILES 
    include/windowing/OSX/OgreOSXCocoaContext.h
    include/windowing/OSX/OgreOSXCocoaView.h
    include/windowing/OSX/OgreOSXCocoaWindow.h
    include/windowing/OSX/OgreOSXCocoaWindowDelegate.h
    include/windowing/OSX/OgreOSXGL3PlusSupport.h
    src/windowing/OSX/OgreGL3PlusUtil.h
  )

  set( PLATFORM_HEADER_INSTALL "OSX" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

elseif (SDL)
  set( PLATFORM_HEADER_FILES 
    include/windowing/SDL/OgreSDLGLSupport.h
    include/windowing/SDL/OgreSDLPrerequisites.h
    include/windowing/SDL/OgreSDLWindow.h
    src/windowing/SDL/OgreGL3PlusUtil.h
  )

  set( PLATFORM_HEADER_INSTALL "SDL" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    src/windowing/SDL/OgreSDLGLSupport.cpp
    src/windowing/SDL/OgreSDLWindow.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "SDL" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (WIN32)
  set( PLATFORM_HEADER_FILES 
    include/windowing/win32/OgreWin32Context.h
    include/windowing/win32/OgreWin32GLSupport.h
    include/windowing/win32/OgreWin32Prerequisites.h
    include/windowing/win32/OgreWin32Window.h
    src/windowing/win32/OgreGL3PlusUtil.h
  )

  set( PLATFORM_HEADER_INSTALL "WIN32" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    src/windowing/win32/OgreWin32Context.cpp
    src/windowing/win32/OgreWin32GLSupport.cpp
    src/windowing/win32/OgreWin32Window.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "WIN32" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

endif ()

# For ease of use make a variable that has all files for this module
set( ALL_FILES ${HEADER_FILES} ${SOURCE_FILES} ${PLATFORM_HEADER_FILES} ${PLATFORM_SOURCE_FILES} )

set( MODULE_NAME "OgreRenderSystem_GL3Plus" )
add_library( ${MODULE_NAME} ${ALL_FILES} )
add_dependencies( ${MODULE_NAME} Ogre )
target_link_libraries( ${MODULE_NAME} Ogre )
set_property( TARGET ${MODULE_NAME} APPEND_STRING PROPERTY COMPILE_DEFINITIONS "RenderSystem_GL3Plus_EXPORTS" )

if ( LINUX32 )
  target_link_libraries( ${MODULE_NAME} GL )
endif( LINUX32 )

if ( LINUX64 )
  target_link_libraries( ${MODULE_NAME} GL )
endif( LINUX64 )

if ( WIN32 )
  target_link_libraries( ${MODULE_NAME} opengl32 )
endif( WIN32 )

if ( WIN64 )
  target_link_libraries( ${MODULE_NAME} opengl32 )
endif( WIN64 )

include_directories( ../../../freetype/include ../../../freetype/include/freetype ../../../freetype/include/freetype/config ../../../freetype/include/freetype/internal ../../../freetype/include/freetype/internal/services ../../../freetype/src ../../../freetype/src/winfonts ../../OgreMain/include ../../OgreMain/include/Hash ../../OgreMain/include/Threading ../../OgreMain/src ../../OgreMain/src/nedmalloc ../../OgreMain/src/stbi ../../include include include/GL include/GLSL )

if ( ANDROID )
  include_directories( ../../OgreMain/include/Android )
endif( ANDROID )

if ( EMSCRIPTEN )
  include_directories( ../../OgreMain/include/Emscripten )
endif( EMSCRIPTEN )

if ( GLX )
  include_directories( ../../OgreMain/src/GLX include/windowing src src/windowing include/windowing/GLX src/windowing/GLX )
endif( GLX )

if ( GTK )
  include_directories( ../../OgreMain/include/gtk ../../OgreMain/src/gtk include/windowing src src/windowing include/windowing/gtk src/windowing/gtk )
endif( GTK )

if ( IOS )
  include_directories( ../../OgreMain/include/iOS )
endif( IOS )

if ( OSX )
  include_directories( ../../OgreMain/include/OSX include/windowing src src/windowing include/windowing/OSX src/windowing/OSX )
endif( OSX )

if ( SDL )
  include_directories( include/windowing src src/windowing include/windowing/SDL src/windowing/SDL )
endif( SDL )

if ( WIN32 )
  include_directories( ../../OgreMain/include/WIN32 ../../OgreMain/src/WIN32 include/windowing src src/windowing include/windowing/win32 src/windowing/win32 )
endif( WIN32 )



#******** START OF AUTOGENERATED TEMPLATED ADDITION CONTENT ********




if (ANDROID)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (EMSCRIPTEN)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (GLX)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (GTK)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (IOS)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (LINUX32)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (LINUX64)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (OSX)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (SDL)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (WIN32)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (WIN64)
GUCEF_config_lib( ${MODULE_NAME} )
else()
GUCEF_config_lib( ${MODULE_NAME} )
endif()



#******** END OF AUTOGENERATED TEMPLATED ADDITION CONTENT ********


