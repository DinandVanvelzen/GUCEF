#-------------------------------------------------------------------
# This file was automatically generated by ProjectGenerator
# which is tooling part the build system designed for GUCEF
#     (Galaxy Unlimited Framework)
# For the latest info, see http://www.VanvelzenSoftware.com/
#
# The contents of this file are placed in the public domain. Feel
# free to make use of it in any way you like.
#-------------------------------------------------------------------
#

# Configuration for module: OgreRenderSystem_Direct3D9



if (WIN32)
  set( PLATFORM_HEADER_FILES 
    include/OgreD3D9DepthBuffer.h
    include/OgreD3D9Device.h
    include/OgreD3D9DeviceManager.h
    include/OgreD3D9Driver.h
    include/OgreD3D9DriverList.h
    include/OgreD3D9GpuProgram.h
    include/OgreD3D9GpuProgramManager.h
    include/OgreD3D9HLSLProgram.h
    include/OgreD3D9HLSLProgramFactory.h
    include/OgreD3D9HardwareBufferManager.h
    include/OgreD3D9HardwareIndexBuffer.h
    include/OgreD3D9HardwareOcclusionQuery.h
    include/OgreD3D9HardwarePixelBuffer.h
    include/OgreD3D9HardwareVertexBuffer.h
    include/OgreD3D9Mappings.h
    include/OgreD3D9MultiRenderTarget.h
    include/OgreD3D9Plugin.h
    include/OgreD3D9Prerequisites.h
    include/OgreD3D9RenderSystem.h
    include/OgreD3D9RenderWindow.h
    include/OgreD3D9Resource.h
    include/OgreD3D9ResourceManager.h
    include/OgreD3D9StereoDriverAMD.h
    include/OgreD3D9StereoDriverBridge.h
    include/OgreD3D9StereoDriverImpl.h
    include/OgreD3D9StereoDriverNVIDIA.h
    include/OgreD3D9Texture.h
    include/OgreD3D9TextureManager.h
    include/OgreD3D9VertexDeclaration.h
    include/OgreD3D9VideoMode.h
    include/OgreD3D9VideoModeList.h
  )

  set( PLATFORM_HEADER_INSTALL "WIN32" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    src/OgreD3D9DepthBuffer.cpp
    src/OgreD3D9Device.cpp
    src/OgreD3D9DeviceManager.cpp
    src/OgreD3D9Driver.cpp
    src/OgreD3D9DriverList.cpp
    src/OgreD3D9EngineDll.cpp
    src/OgreD3D9GpuProgram.cpp
    src/OgreD3D9GpuProgramManager.cpp
    src/OgreD3D9HLSLProgram.cpp
    src/OgreD3D9HLSLProgramFactory.cpp
    src/OgreD3D9HardwareBufferManager.cpp
    src/OgreD3D9HardwareIndexBuffer.cpp
    src/OgreD3D9HardwareOcclusionQuery.cpp
    src/OgreD3D9HardwarePixelBuffer.cpp
    src/OgreD3D9HardwareVertexBuffer.cpp
    src/OgreD3D9Mappings.cpp
    src/OgreD3D9MultiRenderTarget.cpp
    src/OgreD3D9Plugin.cpp
    src/OgreD3D9RenderSystem.cpp
    src/OgreD3D9RenderWindow.cpp
    src/OgreD3D9Resource.cpp
    src/OgreD3D9ResourceManager.cpp
    src/OgreD3D9StereoDriverAMD.cpp
    src/OgreD3D9StereoDriverBridge.cpp
    src/OgreD3D9StereoDriverNVIDIA.cpp
    src/OgreD3D9Texture.cpp
    src/OgreD3D9TextureManager.cpp
    src/OgreD3D9VertexDeclaration.cpp
    src/OgreD3D9VideoMode.cpp
    src/OgreD3D9VideoModeList.cpp
    src/OgreDxErr.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "WIN32" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (WIN64)
  set( PLATFORM_HEADER_FILES 
    include/OgreD3D9DepthBuffer.h
    include/OgreD3D9Device.h
    include/OgreD3D9DeviceManager.h
    include/OgreD3D9Driver.h
    include/OgreD3D9DriverList.h
    include/OgreD3D9GpuProgram.h
    include/OgreD3D9GpuProgramManager.h
    include/OgreD3D9HLSLProgram.h
    include/OgreD3D9HLSLProgramFactory.h
    include/OgreD3D9HardwareBufferManager.h
    include/OgreD3D9HardwareIndexBuffer.h
    include/OgreD3D9HardwareOcclusionQuery.h
    include/OgreD3D9HardwarePixelBuffer.h
    include/OgreD3D9HardwareVertexBuffer.h
    include/OgreD3D9Mappings.h
    include/OgreD3D9MultiRenderTarget.h
    include/OgreD3D9Plugin.h
    include/OgreD3D9Prerequisites.h
    include/OgreD3D9RenderSystem.h
    include/OgreD3D9RenderWindow.h
    include/OgreD3D9Resource.h
    include/OgreD3D9ResourceManager.h
    include/OgreD3D9StereoDriverAMD.h
    include/OgreD3D9StereoDriverBridge.h
    include/OgreD3D9StereoDriverImpl.h
    include/OgreD3D9StereoDriverNVIDIA.h
    include/OgreD3D9Texture.h
    include/OgreD3D9TextureManager.h
    include/OgreD3D9VertexDeclaration.h
    include/OgreD3D9VideoMode.h
    include/OgreD3D9VideoModeList.h
  )

  set( PLATFORM_HEADER_INSTALL "WIN64" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    src/OgreD3D9DepthBuffer.cpp
    src/OgreD3D9Device.cpp
    src/OgreD3D9DeviceManager.cpp
    src/OgreD3D9Driver.cpp
    src/OgreD3D9DriverList.cpp
    src/OgreD3D9EngineDll.cpp
    src/OgreD3D9GpuProgram.cpp
    src/OgreD3D9GpuProgramManager.cpp
    src/OgreD3D9HLSLProgram.cpp
    src/OgreD3D9HLSLProgramFactory.cpp
    src/OgreD3D9HardwareBufferManager.cpp
    src/OgreD3D9HardwareIndexBuffer.cpp
    src/OgreD3D9HardwareOcclusionQuery.cpp
    src/OgreD3D9HardwarePixelBuffer.cpp
    src/OgreD3D9HardwareVertexBuffer.cpp
    src/OgreD3D9Mappings.cpp
    src/OgreD3D9MultiRenderTarget.cpp
    src/OgreD3D9Plugin.cpp
    src/OgreD3D9RenderSystem.cpp
    src/OgreD3D9RenderWindow.cpp
    src/OgreD3D9Resource.cpp
    src/OgreD3D9ResourceManager.cpp
    src/OgreD3D9StereoDriverAMD.cpp
    src/OgreD3D9StereoDriverBridge.cpp
    src/OgreD3D9StereoDriverNVIDIA.cpp
    src/OgreD3D9Texture.cpp
    src/OgreD3D9TextureManager.cpp
    src/OgreD3D9VertexDeclaration.cpp
    src/OgreD3D9VideoMode.cpp
    src/OgreD3D9VideoModeList.cpp
    src/OgreDxErr.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "WIN64" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

endif ()

# For ease of use make a variable that has all files for this module
set( ALL_FILES ${HEADER_FILES} ${SOURCE_FILES} ${PLATFORM_HEADER_FILES} ${PLATFORM_SOURCE_FILES} )

# Per CMake limitation, we must set any additional library search paths before defining the target
if ( WIN32 )
  link_directories( $ENV{DXSDK_DIR}/Lib/x86 )
endif( WIN32 )
if ( WIN64 )
  link_directories( $ENV{DXSDK_DIR}/Lib/x86 )
endif( WIN64 )


if( WIN32 )
  set( MODULE_NAME "OgreRenderSystem_Direct3D9" )
elseif( WIN64 )
  set( MODULE_NAME "OgreRenderSystem_Direct3D9" )
endif()
if( WIN32 )
  add_library( ${MODULE_NAME} ${ALL_FILES} )
elseif( WIN64 )
  add_library( ${MODULE_NAME} ${ALL_FILES} )
endif()

if ( WIN32 )
  add_dependencies( ${MODULE_NAME} Ogre )
  target_link_libraries( ${MODULE_NAME} Ogre d3d9 d3dx9 )
  set_property( TARGET ${MODULE_NAME} APPEND_STRING PROPERTY COMPILE_DEFINITIONS "OGRED3DENGINEDLL_EXPORTS ;_USRDLL " )
endif( WIN32 )

if ( WIN64 )
  add_dependencies( ${MODULE_NAME} Ogre )
  target_link_libraries( ${MODULE_NAME} Ogre d3d9 d3dx9 )
  set_property( TARGET ${MODULE_NAME} APPEND_STRING PROPERTY COMPILE_DEFINITIONS "OGRED3DENGINEDLL_EXPORTS ;_USRDLL " )
endif( WIN64 )

include_directories( ../../../freetype/include ../../../freetype/include/freetype ../../../freetype/include/freetype/config ../../../freetype/include/freetype/internal ../../../freetype/include/freetype/internal/services ../../../freetype/src ../../../freetype/src/winfonts ../../OgreMain/include ../../OgreMain/include/Hash ../../OgreMain/include/Threading ../../OgreMain/src ../../OgreMain/src/nedmalloc ../../OgreMain/src/stbi ../../include )

if ( WIN32 )
  include_directories( $ENV{DXSDK_DIR}/Include ../../../external ../../OgreMain/include/WIN32 ../../OgreMain/src/WIN32 include )
endif( WIN32 )

if ( WIN64 )
  include_directories( $ENV{DXSDK_DIR}/Include ../../../external include )
endif( WIN64 )



#******** START OF AUTOGENERATED TEMPLATED ADDITION CONTENT ********




if (WIN32)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (WIN64)
GUCEF_config_lib( ${MODULE_NAME} )
endif()



#******** END OF AUTOGENERATED TEMPLATED ADDITION CONTENT ********


