#-------------------------------------------------------------------
# This file was automatically generated by ProjectGenerator
# which is tooling part the build system designed for GUCEF
#     (Galaxy Unlimited Framework)
# For the latest info, see http://www.VanvelzenSoftware.com/
#
# The contents of this file are placed in the public domain. Feel
# free to make use of it in any way you like.
#-------------------------------------------------------------------
#

# Configuration for module: aws-crt-cpp

set( SOURCE_FILES 
  source/Allocator.cpp
  source/Api.cpp
  source/DateTime.cpp
  source/ImdsClient.cpp
  source/JsonObject.cpp
  source/StringUtils.cpp
  source/Types.cpp
  source/UUID.cpp
  source/auth/Credentials.cpp
  source/auth/Sigv4Signing.cpp
  source/crypto/HMAC.cpp
  source/crypto/Hash.cpp
  source/endpoints/RuleEngine.cpp
  source/external/cJSON.cpp
  source/http/HttpConnection.cpp
  source/http/HttpConnectionManager.cpp
  source/http/HttpProxyStrategy.cpp
  source/http/HttpRequestResponse.cpp
  source/io/Bootstrap.cpp
  source/io/ChannelHandler.cpp
  source/io/EventLoopGroup.cpp
  source/io/HostResolver.cpp
  source/io/Pkcs11.cpp
  source/io/SocketOptions.cpp
  source/io/Stream.cpp
  source/io/TlsOptions.cpp
  source/io/Uri.cpp
  source/iot/MqttClient.cpp
  source/mqtt/MqttClient.cpp
)

# Make sure the PLATFORM_HEADER_FILES variable is always defined
 set( PLATFORM_HEADER_FILES "" )

# Make sure the PLATFORM_SOURCE_FILES variable is always defined
 set( PLATFORM_SOURCE_FILES "" )

# For ease of use make a variable that has all files for this module
set( ALL_FILES ${HEADER_FILES} ${SOURCE_FILES} ${PLATFORM_HEADER_FILES} ${PLATFORM_SOURCE_FILES} )

set( MODULE_NAME "aws-crt-cpp" )
add_library( ${MODULE_NAME} ${ALL_FILES} )
add_dependencies( ${MODULE_NAME} aws-c-auth aws-c-cal aws-c-common aws-c-compression aws-c-event-stream aws-c-http aws-c-io aws-c-mqtt aws-c-s3 aws-c-sdkutils aws-checksums )
target_link_libraries( ${MODULE_NAME} aws-c-auth aws-c-cal aws-c-common aws-c-compression aws-c-event-stream aws-c-http aws-c-io aws-c-mqtt aws-c-s3 aws-c-sdkutils aws-checksums )
set_property( TARGET ${MODULE_NAME} APPEND_STRING PROPERTY COMPILE_DEFINITIONS "AWS_CRT_CPP_EXPORTS;CJSON_AS4CPP_HIDE_SYMBOLS;CJSON_HIDE_SYMBOLS;USE_IMPORT_EXPORT=1" )
set_property( TARGET ${MODULE_NAME} APPEND_STRING PROPERTY VERSION 0.18.16.0 )
set_property( TARGET ${MODULE_NAME} APPEND_STRING PROPERTY SOVERSION 0.18.16.0 )

if ( ANDROID )
  set_property( TARGET ${MODULE_NAME} APPEND_STRING PROPERTY COMPILE_DEFINITIONS "ENABLE_OPENSSL_ENCRYPTION" )
endif( ANDROID )

if ( LINUX32 )
  set_property( TARGET ${MODULE_NAME} APPEND_STRING PROPERTY COMPILE_DEFINITIONS "AWS_AFFINITY_METHOD=AWS_AFFINITY_METHOD_PTHREAD_ATTR;ENABLE_OPENSSL_ENCRYPTION;PLATFORM_LINUX;_POSIX_C_SOURCE=200809L;_XOPEN_SOURCE=500" )
endif( LINUX32 )

if ( LINUX64 )
  set_property( TARGET ${MODULE_NAME} APPEND_STRING PROPERTY COMPILE_DEFINITIONS "AWS_AFFINITY_METHOD=AWS_AFFINITY_METHOD_PTHREAD_ATTR;ENABLE_OPENSSL_ENCRYPTION;PLATFORM_LINUX;_POSIX_C_SOURCE=200809L;_XOPEN_SOURCE=500" )
endif( LINUX64 )

if ( OSX )
  set_property( TARGET ${MODULE_NAME} APPEND_STRING PROPERTY COMPILE_DEFINITIONS "ENABLE_COMMONCRYPTO_ENCRYPTION" )
endif( OSX )

if ( WIN32 )
  target_link_libraries( ${MODULE_NAME} Secur32.lib Shlwapi.lib Userenv.lib Version.lib WindowsApp.lib Winhttp.lib Wininet.lib msxml6.lib )
  set_property( TARGET ${MODULE_NAME} APPEND_STRING PROPERTY COMPILE_DEFINITIONS "AWS_CRT_CPP_EXPORTS;AWS_CRT_CPP_USE_IMPORT_EXPORT;BYPASS_DEFAULT_PROXY;ENABLE_BCRYPT_ENCRYPTION;ENABLE_WINDOWS_CLIENT;ENABLE_WINDOWS_IXML_HTTP_REQUEST_2_CLIENT;PLATFORM_WINDOWS;USE_WINDOWS_DLL_SEMANTICS" )
endif( WIN32 )

if ( WIN64 )
  target_link_libraries( ${MODULE_NAME} Secur32.lib Shlwapi.lib Userenv.lib Version.lib WindowsApp.lib Winhttp.lib Wininet.lib msxml6.lib )
  set_property( TARGET ${MODULE_NAME} APPEND_STRING PROPERTY COMPILE_DEFINITIONS "AWS_CRT_CPP_EXPORTS;AWS_CRT_CPP_USE_IMPORT_EXPORT;BYPASS_DEFAULT_PROXY;ENABLE_BCRYPT_ENCRYPTION;ENABLE_WINDOWS_CLIENT;ENABLE_WINDOWS_IXML_HTTP_REQUEST_2_CLIENT;PLATFORM_WINDOWS;USE_WINDOWS_DLL_SEMANTICS" )
endif( WIN64 )

include_directories( crt/aws-c-auth/include crt/aws-c-cal/include crt/aws-c-common/include crt/aws-c-compression/include crt/aws-c-event-stream/include crt/aws-c-http/include crt/aws-c-io/include crt/aws-c-io/source crt/aws-c-mqtt/include crt/aws-c-s3/include crt/aws-c-sdkutils/include crt/aws-checksums/include include )



#******** START OF AUTOGENERATED TEMPLATED ADDITION CONTENT ********




if (ANDROID)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (LINUX32)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (LINUX64)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (OSX)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (WIN32)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (WIN64)
GUCEF_config_lib( ${MODULE_NAME} )
else()
GUCEF_config_lib( ${MODULE_NAME} )
endif()



#******** END OF AUTOGENERATED TEMPLATED ADDITION CONTENT ********


