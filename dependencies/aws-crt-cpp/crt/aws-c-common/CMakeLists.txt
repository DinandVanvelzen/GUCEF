#-------------------------------------------------------------------
# This file was automatically generated by ProjectGenerator
# which is tooling part the build system designed for GUCEF
#     (Galaxy Unlimited Framework)
# For the latest info, see http://www.VanvelzenSoftware.com/
#
# The contents of this file are placed in the public domain. Feel
# free to make use of it in any way you like.
#-------------------------------------------------------------------
#

# Configuration for module: aws-c-common

set( SOURCE_FILES 
  source/allocator.c
  source/allocator_sba.c
  source/array_list.c
  source/assert.c
  source/bus.c
  source/byte_buf.c
  source/cache.c
  source/codegen.c
  source/command_line_parser.c
  source/common.c
  source/condition_variable.c
  source/date_time.c
  source/device_random.c
  source/encoding.c
  source/error.c
  source/fifo_cache.c
  source/file.c
  source/hash_table.c
  source/json.c
  source/lifo_cache.c
  source/linked_hash_table.c
  source/log_channel.c
  source/log_formatter.c
  source/log_writer.c
  source/logging.c
  source/lru_cache.c
  source/math.c
  source/memtrace.c
  source/priority_queue.c
  source/process_common.c
  source/promise.c
  source/ref_count.c
  source/ring_buffer.c
  source/statistics.c
  source/string.c
  source/task_scheduler.c
  source/thread_scheduler.c
  source/thread_shared.c
  source/uri.c
  source/uuid.c
  source/xml_parser.c
  source/arch/generic/cpuid.c
  source/external/cJSON.c
)



if (ANDROID)
  set( PLATFORM_SOURCE_FILES 
    source/android/logging.c
  )

  set( PLATFORM_SOURCE_INSTALL "ANDROID" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (LINUX32)
  set( PLATFORM_SOURCE_FILES 
    source/posix/clock.c
    source/posix/condition_variable.c
    source/posix/device_random.c
    source/posix/environment.c
    source/posix/file.c
    source/posix/mutex.c
    source/posix/process.c
    source/posix/rw_lock.c
    source/posix/system_info.c
    source/posix/thread.c
    source/posix/time.c
  )

  set( PLATFORM_SOURCE_INSTALL "LINUX32" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (LINUX64)
  set( PLATFORM_SOURCE_FILES 
    source/posix/clock.c
    source/posix/condition_variable.c
    source/posix/device_random.c
    source/posix/environment.c
    source/posix/file.c
    source/posix/mutex.c
    source/posix/process.c
    source/posix/rw_lock.c
    source/posix/system_info.c
    source/posix/thread.c
    source/posix/time.c
  )

  set( PLATFORM_SOURCE_INSTALL "LINUX64" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (WIN32)
  set( PLATFORM_SOURCE_FILES 
    source/windows/clock.c
    source/windows/condition_variable.c
    source/windows/device_random.c
    source/windows/environment.c
    source/windows/file.c
    source/windows/mutex.c
    source/windows/process.c
    source/windows/rw_lock.c
    source/windows/system_info.c
    source/windows/thread.c
    source/windows/time.c
  )

  set( PLATFORM_SOURCE_INSTALL "WIN32" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (WIN64)
  set( PLATFORM_SOURCE_FILES 
    source/windows/clock.c
    source/windows/condition_variable.c
    source/windows/device_random.c
    source/windows/environment.c
    source/windows/file.c
    source/windows/mutex.c
    source/windows/process.c
    source/windows/rw_lock.c
    source/windows/system_info.c
    source/windows/thread.c
    source/windows/time.c
  )

  set( PLATFORM_SOURCE_INSTALL "WIN64" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

endif ()

# Make sure the PLATFORM_HEADER_FILES variable is always defined
 set( PLATFORM_HEADER_FILES "" )

# For ease of use make a variable that has all files for this module
set( ALL_FILES ${HEADER_FILES} ${SOURCE_FILES} ${PLATFORM_HEADER_FILES} ${PLATFORM_SOURCE_FILES} )

set( MODULE_NAME "aws-c-common" )
add_library( ${MODULE_NAME} STATIC ${ALL_FILES} )
set_property( TARGET ${MODULE_NAME} APPEND_STRING PROPERTY COMPILE_DEFINITIONS "AWS_CORE_EXPORTS;CJSON_AS4CPP_EXPORT_SYMBOLS;HAVE_BUILTIN_CPU_SUPPORTS;USE_IMPORT_EXPORT" )

if ( LINUX32 )
  set_property( TARGET ${MODULE_NAME} APPEND_STRING PROPERTY COMPILE_DEFINITIONS "AWS_AFFINITY_METHOD=AWS_AFFINITY_METHOD_PTHREAD_ATTR;PLATFORM_LINUX;_POSIX_C_SOURCE=200809L;_XOPEN_SOURCE=500" )
endif( LINUX32 )

if ( LINUX64 )
  set_property( TARGET ${MODULE_NAME} APPEND_STRING PROPERTY COMPILE_DEFINITIONS "AWS_AFFINITY_METHOD=AWS_AFFINITY_METHOD_PTHREAD_ATTR;PLATFORM_LINUX;_POSIX_C_SOURCE=200809L;_XOPEN_SOURCE=500" )
endif( LINUX64 )

include_directories( include )



#******** START OF AUTOGENERATED TEMPLATED ADDITION CONTENT ********




if (ANDROID)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (LINUX32)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (LINUX64)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (OSX)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (WIN32)
GUCEF_config_lib( ${MODULE_NAME} )
elseif (WIN64)
GUCEF_config_lib( ${MODULE_NAME} )
else()
GUCEF_config_lib( ${MODULE_NAME} )
endif()



#******** END OF AUTOGENERATED TEMPLATED ADDITION CONTENT ********


