--------------------------------------------------------------------
-- This file was automatically generated by ProjectGenerator
-- which is tooling part the build system designed for GUCEF
--     (Galaxy Unlimited Framework)
-- For the latest info, see http://www.VanvelzenSoftware.com/
--
-- The contents of this file are placed in the public domain. Feel
-- free to make use of it in any way you like.
--------------------------------------------------------------------
--

-- Configuration for module: MyGUI.FontViewer


configuration( { "LINUX32" } )
  project( "MyGUI.FontViewer" )

configuration( { "LINUX64" } )
  project( "MyGUI.FontViewer" )

configuration( { "WIN32" } )
  project( "MyGUI.FontViewer" )

configuration( { "WIN64" } )
  project( "MyGUI.FontViewer" )

configuration( {} )
  location( os.getenv( "PM5OUTPUTDIR" ) )

configuration( {} )
  targetdir( os.getenv( "PM5TARGETDIR" ) )

configuration( {} )
language( "C" )

configuration( { "LINUX32" } )
language( "C++" )

configuration( { "LINUX64" } )
language( "C++" )

configuration( { "WIN32" } )
language( "C++" )

configuration( { "WIN64" } )
language( "C++" )

configuration( { "LINUX32" } )


configuration( { LINUX32 } )
kind( "ConsoleApp" )
configuration( { "LINUX64" } )


configuration( { LINUX64 } )
kind( "ConsoleApp" )
configuration( { "WIN32" } )


configuration( { WIN32 } )
kind( "WindowedApp" )
configuration( { "WIN64" } )


configuration( { WIN64 } )
kind( "WindowedApp" )
  
configuration( { LINUX32 } )
links( { "MyGUI.Engine", "MyGUI.OpenGLPlatform", "freetype" } )
  links( { "MyGUI.Engine", "MyGUI.OpenGLPlatform", "freetype" } )
  

configuration( { LINUX32 } )
defines( { "MYGUI_USE_FREETYPE" } )
  
configuration( { LINUX64 } )
links( { "MyGUI.Engine", "MyGUI.OpenGLPlatform", "freetype" } )
  links( { "MyGUI.Engine", "MyGUI.OpenGLPlatform", "freetype" } )
  

configuration( { LINUX64 } )
defines( { "MYGUI_USE_FREETYPE" } )
  
configuration( { WIN32 } )
links( { "MyGUI.Engine", "MyGUI.OpenGLPlatform", "freetype" } )
  links( { "MyGUI.Engine", "MyGUI.OpenGLPlatform", "freetype", "glu32.lib" } )
  

configuration( { WIN32 } )
defines( { "MYGUI_USE_FREETYPE" } )
  
configuration( { WIN64 } )
links( { "MyGUI.Engine", "MyGUI.OpenGLPlatform", "freetype" } )
  links( { "MyGUI.Engine", "MyGUI.OpenGLPlatform", "freetype", "glu32.lib" } )
  

configuration( { WIN64 } )
defines( { "MYGUI_USE_FREETYPE" } )


configuration( { "LINUX32" } )
    vpaths { ["Platform Headers"] = { "**.h", "**.hpp", "**.hxx" } }
    files( {
      "DemoKeeper.h",
      "FontPanel.h",
      "FontView.h",
      "TextureView.h",
      "../../Common/Base/InputFocusInfo.h",
      "../../Common/Base/Main.h",
      "../../Common/Base/StatisticInfo.h",
      "../../Common/Base/OpenGL/BaseManager.h",
      "../../Common/Input/OIS/InputManager.h",
      "../../Common/Input/OIS/PointerManager.h"
    } )

    vpaths { ["Platform Source"] = { "**.c", "**.cpp", "**.cs", "**.asm" } }
    files( {
      "DemoKeeper.cpp",
      "FontPanel.cpp",
      "FontView.cpp",
      "TextureView.cpp",
      "../../Common/Base/OpenGL/BaseManager.cpp",
      "../../Common/Input/OIS/InputManager.cpp",
      "../../Common/Input/OIS/PointerManager.cpp"
    } )



configuration( { "LINUX64" } )
    vpaths { ["Platform Headers"] = { "**.h", "**.hpp", "**.hxx" } }
    files( {
      "DemoKeeper.h",
      "FontPanel.h",
      "FontView.h",
      "TextureView.h",
      "../../Common/Base/InputFocusInfo.h",
      "../../Common/Base/Main.h",
      "../../Common/Base/StatisticInfo.h",
      "../../Common/Base/OpenGL/BaseManager.h",
      "../../Common/Input/OIS/InputManager.h",
      "../../Common/Input/OIS/PointerManager.h"
    } )

    vpaths { ["Platform Source"] = { "**.c", "**.cpp", "**.cs", "**.asm" } }
    files( {
      "DemoKeeper.cpp",
      "FontPanel.cpp",
      "FontView.cpp",
      "TextureView.cpp",
      "../../Common/Base/OpenGL/BaseManager.cpp",
      "../../Common/Input/OIS/InputManager.cpp",
      "../../Common/Input/OIS/PointerManager.cpp"
    } )



configuration( { "WIN32" } )
    vpaths { ["Platform Headers"] = { "**.h", "**.hpp", "**.hxx" } }
    files( {
      "DemoKeeper.h",
      "FontPanel.h",
      "FontView.h",
      "TextureView.h",
      "../../Common/Base/InputFocusInfo.h",
      "../../Common/Base/Main.h",
      "../../Common/Base/StatisticInfo.h",
      "../../Common/Base/OpenGL/BaseManager.h",
      "../../Common/Input/Win32API/InputManager.h",
      "../../Common/Input/Win32API/PointerManager.h"
    } )

    vpaths { ["Platform Source"] = { "**.c", "**.cpp", "**.cs", "**.asm" } }
    files( {
      "DemoKeeper.cpp",
      "FontPanel.cpp",
      "FontView.cpp",
      "TextureView.cpp",
      "../../Common/Base/OpenGL/BaseManager.cpp",
      "../../Common/Input/Win32API/InputManager.cpp",
      "../../Common/Input/Win32API/PointerManager.cpp"
    } )



configuration( { "WIN64" } )
    vpaths { ["Platform Headers"] = { "**.h", "**.hpp", "**.hxx" } }
    files( {
      "DemoKeeper.h",
      "FontPanel.h",
      "FontView.h",
      "TextureView.h",
      "../../Common/Base/InputFocusInfo.h",
      "../../Common/Base/Main.h",
      "../../Common/Base/StatisticInfo.h",
      "../../Common/Base/OpenGL/BaseManager.h",
      "../../Common/Input/Win32API/InputManager.h",
      "../../Common/Input/Win32API/PointerManager.h"
    } )

    vpaths { ["Platform Source"] = { "**.c", "**.cpp", "**.cs", "**.asm" } }
    files( {
      "DemoKeeper.cpp",
      "FontPanel.cpp",
      "FontView.cpp",
      "TextureView.cpp",
      "../../Common/Base/OpenGL/BaseManager.cpp",
      "../../Common/Input/Win32API/InputManager.cpp",
      "../../Common/Input/Win32API/PointerManager.cpp"
    } )


configuration( {} )
includedirs( { "../../../freetype/include", "../../../freetype/include/freetype", "../../../freetype/include/freetype/config", "../../../freetype/include/freetype/internal", "../../../freetype/include/freetype/internal/services", "../../../freetype/src", "../../../freetype/src/winfonts", "../../Common", "../../Common/FileSystemInfo", "../../Common/Input", "../../MyGUIEngine/include", "../../Platforms/OpenGL/OpenGLPlatform/include", "../../Platforms/OpenGL/OpenGLPlatform/include/GL" } )

configuration( { "LINUX32" } )
includedirs( { "../FontViewer", "../../Common/Base", "../../Common/Base/OpenGL", "../../Common/Input/OIS" } )

configuration( { "LINUX64" } )
includedirs( { "../FontViewer", "../../Common/Base", "../../Common/Base/OpenGL", "../../Common/Input/OIS" } )

configuration( { "WIN32" } )
includedirs( { "../FontViewer", "../../Common/Base", "../../Common/Base/OpenGL", "../../Common/Input/Win32API" } )

configuration( { "WIN64" } )
includedirs( { "../FontViewer", "../../Common/Base", "../../Common/Base/OpenGL", "../../Common/Input/Win32API" } )
