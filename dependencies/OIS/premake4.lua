--------------------------------------------------------------------
-- This file was automatically generated by ProjectGenerator
-- which is tooling part the build system designed for GUCEF
--     (Galaxy Unlimited Framework)
-- For the latest info, see http://www.VanvelzenSoftware.com/
--
-- The contents of this file are placed in the public domain. Feel
-- free to make use of it in any way you like.
--------------------------------------------------------------------
--

-- Configuration for module: OIS


configuration( { "LINUX32" } )
  project( "OIS" )

configuration( { "LINUX64" } )
  project( "OIS" )

configuration( { "OSX" } )
  project( "OIS" )

configuration( { "WIN32" } )
  project( "OIS" )

configuration( { "WIN64" } )
  project( "OIS" )

configuration( {} )
  location( os.getenv( "PM4OUTPUTDIR" ) )

configuration( {} )
  targetdir( os.getenv( "PM4TARGETDIR" ) )

configuration( { "IOS" } )
language( "C++" )

configuration( { "LINUX32" } )
language( "C++" )

configuration( { "LINUX64" } )
language( "C++" )

configuration( { "OSX" } )
language( "C++" )

configuration( { "SDL" } )
language( "C++" )

configuration( { "WIN32" } )
language( "C++" )

configuration( { "WIN64" } )
language( "C++" )

configuration( { "LINUX32" } )


configuration( { LINUX32 } )
kind( "SharedLib" )
configuration( { "LINUX64" } )


configuration( { LINUX64 } )
kind( "SharedLib" )
configuration( { "OSX" } )


configuration( { OSX } )
kind( "SharedLib" )
configuration( { "WIN32" } )


configuration( { WIN32 } )
kind( "SharedLib" )
configuration( { "WIN64" } )


configuration( { WIN64 } )
kind( "SharedLib" )
  links( { "X11" } )
  

configuration( { LINUX32 } )
defines( { "OIS_DYNAMIC_LIB", "OIS_LINUX_PLATFORM", "OIS_NONCLIENT_BUILD" } )
  links( { "X11" } )
  

configuration( { LINUX64 } )
defines( { "OIS_DYNAMIC_LIB", "OIS_LINUX_PLATFORM", "OIS_NONCLIENT_BUILD" } )
  

configuration( { OSX } )
defines( { "OIS_APPLE_PLATFORM", "OIS_DYNAMIC_LIB", "OIS_NONCLIENT_BUILD" } )
  
configuration( { WIN32 } )
links( { "DirectInput8" } )
  links( { "dinput8", "dxguid" } )
  

configuration( { WIN32 } )
defines( { "OIS_DYNAMIC_LIB", "OIS_NONCLIENT_BUILD" } )
  
configuration( { WIN64 } )
links( { "DirectInput8" } )
  links( { "dinput8", "dxguid" } )
  

configuration( { WIN64 } )
defines( { "OIS_DYNAMIC_LIB", "OIS_NONCLIENT_BUILD" } )


configuration( { "IOS" } )
    vpaths { ["Platform Headers"] = { "**.h", "**.hpp", "**.hxx" } }
    files( {
      "includes/iphone/iPhoneAccelerometer.h",
      "includes/iphone/iPhoneHelpers.h",
      "includes/iphone/iPhoneInputManager.h",
      "includes/iphone/iPhoneMultiTouch.h",
      "includes/iphone/iPhonePrereqs.h"
    } )

    vpaths { ["Platform Source"] = { "**.c", "**.cpp", "**.cs", "**.asm" } }
    files( {
      "src/OISEffect.cpp",
      "src/OISException.cpp",
      "src/OISForceFeedback.cpp",
      "src/OISInputManager.cpp",
      "src/OISJoyStick.cpp",
      "src/OISKeyboard.cpp",
      "src/OISObject.cpp",
      "src/extras/LIRC/OISLIRC.cpp",
      "src/extras/LIRC/OISLIRCFactoryCreator.cpp"
    } )



configuration( { "LINUX32" } )
    vpaths { ["Platform Headers"] = { "**.h", "**.hpp", "**.hxx" } }
    files( {
      "includes/OIS.h",
      "includes/OISConfig.h",
      "includes/OISEffect.h",
      "includes/OISEvents.h",
      "includes/OISException.h",
      "includes/OISFactoryCreator.h",
      "includes/OISForceFeedback.h",
      "includes/OISInputManager.h",
      "includes/OISInterface.h",
      "includes/OISJoyStick.h",
      "includes/OISKeyboard.h",
      "includes/OISMouse.h",
      "includes/OISMultiTouch.h",
      "includes/OISObject.h",
      "includes/OISPrereqs.h",
      "includes/linux/EventHelpers.h",
      "includes/linux/LinuxForceFeedback.h",
      "includes/linux/LinuxInputManager.h",
      "includes/linux/LinuxJoyStickEvents.h",
      "includes/linux/LinuxKeyboard.h",
      "includes/linux/LinuxMouse.h",
      "includes/linux/LinuxPrereqs.h",
      "src/extras/LIRC/OISLIRC.h",
      "src/extras/LIRC/OISLIRCFactoryCreator.h",
      "src/extras/LIRC/OISLIRCRingBuffer.h"
    } )

    vpaths { ["Platform Source"] = { "**.c", "**.cpp", "**.cs", "**.asm" } }
    files( {
      "src/OISEffect.cpp",
      "src/OISException.cpp",
      "src/OISForceFeedback.cpp",
      "src/OISInputManager.cpp",
      "src/OISJoyStick.cpp",
      "src/OISKeyboard.cpp",
      "src/OISObject.cpp",
      "src/extras/LIRC/OISLIRC.cpp",
      "src/extras/LIRC/OISLIRCFactoryCreator.cpp",
      "src/linux/EventHelpers.cpp",
      "src/linux/LinuxForceFeedback.cpp",
      "src/linux/LinuxInputManager.cpp",
      "src/linux/LinuxJoyStickEvents.cpp",
      "src/linux/LinuxKeyboard.cpp",
      "src/linux/LinuxMouse.cpp"
    } )



configuration( { "LINUX64" } )
    vpaths { ["Platform Headers"] = { "**.h", "**.hpp", "**.hxx" } }
    files( {
      "includes/OIS.h",
      "includes/OISConfig.h",
      "includes/OISEffect.h",
      "includes/OISEvents.h",
      "includes/OISException.h",
      "includes/OISFactoryCreator.h",
      "includes/OISForceFeedback.h",
      "includes/OISInputManager.h",
      "includes/OISInterface.h",
      "includes/OISJoyStick.h",
      "includes/OISKeyboard.h",
      "includes/OISMouse.h",
      "includes/OISMultiTouch.h",
      "includes/OISObject.h",
      "includes/OISPrereqs.h",
      "includes/linux/EventHelpers.h",
      "includes/linux/LinuxForceFeedback.h",
      "includes/linux/LinuxInputManager.h",
      "includes/linux/LinuxJoyStickEvents.h",
      "includes/linux/LinuxKeyboard.h",
      "includes/linux/LinuxMouse.h",
      "includes/linux/LinuxPrereqs.h",
      "src/extras/LIRC/OISLIRC.h",
      "src/extras/LIRC/OISLIRCFactoryCreator.h",
      "src/extras/LIRC/OISLIRCRingBuffer.h"
    } )

    vpaths { ["Platform Source"] = { "**.c", "**.cpp", "**.cs", "**.asm" } }
    files( {
      "src/OISEffect.cpp",
      "src/OISException.cpp",
      "src/OISForceFeedback.cpp",
      "src/OISInputManager.cpp",
      "src/OISJoyStick.cpp",
      "src/OISKeyboard.cpp",
      "src/OISObject.cpp",
      "src/extras/LIRC/OISLIRC.cpp",
      "src/extras/LIRC/OISLIRCFactoryCreator.cpp",
      "src/linux/EventHelpers.cpp",
      "src/linux/LinuxForceFeedback.cpp",
      "src/linux/LinuxInputManager.cpp",
      "src/linux/LinuxJoyStickEvents.cpp",
      "src/linux/LinuxKeyboard.cpp",
      "src/linux/LinuxMouse.cpp"
    } )



configuration( { "OSX" } )
    vpaths { ["Platform Headers"] = { "**.h", "**.hpp", "**.hxx" } }
    files( {
      "includes/OIS.h",
      "includes/OISConfig.h",
      "includes/OISEffect.h",
      "includes/OISEvents.h",
      "includes/OISException.h",
      "includes/OISFactoryCreator.h",
      "includes/OISForceFeedback.h",
      "includes/OISInputManager.h",
      "includes/OISInterface.h",
      "includes/OISJoyStick.h",
      "includes/OISKeyboard.h",
      "includes/OISMouse.h",
      "includes/OISMultiTouch.h",
      "includes/OISObject.h",
      "includes/OISPrereqs.h",
      "includes/mac/MacHIDManager.h",
      "includes/mac/MacHelpers.h",
      "includes/mac/MacInputManager.h",
      "includes/mac/MacJoyStick.h",
      "includes/mac/MacKeyboard.h",
      "includes/mac/MacMouse.h",
      "includes/mac/MacPrereqs.h",
      "src/extras/LIRC/OISLIRC.h",
      "src/extras/LIRC/OISLIRCFactoryCreator.h",
      "src/extras/LIRC/OISLIRCRingBuffer.h"
    } )

    vpaths { ["Platform Source"] = { "**.c", "**.cpp", "**.cs", "**.asm" } }
    files( {
      "src/OISEffect.cpp",
      "src/OISException.cpp",
      "src/OISForceFeedback.cpp",
      "src/OISInputManager.cpp",
      "src/OISJoyStick.cpp",
      "src/OISKeyboard.cpp",
      "src/OISObject.cpp",
      "src/extras/LIRC/OISLIRC.cpp",
      "src/extras/LIRC/OISLIRCFactoryCreator.cpp",
      "src/mac/MacHIDManager.cpp",
      "src/mac/MacHelpers.cpp",
      "src/mac/MacInputManager.cpp",
      "src/mac/MacJoyStick.cpp",
      "src/mac/MacKeyboard.cpp",
      "src/mac/MacMouse.cpp"
    } )



configuration( { "SDL" } )
    vpaths { ["Platform Headers"] = { "**.h", "**.hpp", "**.hxx" } }
    files( {
      "includes/SDL/SDLInputManager.h",
      "includes/SDL/SDLJoyStick.h",
      "includes/SDL/SDLKeyboard.h",
      "includes/SDL/SDLMouse.h",
      "includes/SDL/SDLPrereqs.h"
    } )

    vpaths { ["Platform Source"] = { "**.c", "**.cpp", "**.cs", "**.asm" } }
    files( {
      "src/OISEffect.cpp",
      "src/OISException.cpp",
      "src/OISForceFeedback.cpp",
      "src/OISInputManager.cpp",
      "src/OISJoyStick.cpp",
      "src/OISKeyboard.cpp",
      "src/OISObject.cpp",
      "src/SDL/SDLInputManager.cpp",
      "src/SDL/SDLJoyStick.cpp",
      "src/SDL/SDLKeyboard.cpp",
      "src/SDL/SDLMouse.cpp",
      "src/extras/LIRC/OISLIRC.cpp",
      "src/extras/LIRC/OISLIRCFactoryCreator.cpp"
    } )



configuration( { "WIN32" } )
    vpaths { ["Platform Headers"] = { "**.h", "**.hpp", "**.hxx" } }
    files( {
      "includes/OIS.h",
      "includes/OISConfig.h",
      "includes/OISEffect.h",
      "includes/OISEvents.h",
      "includes/OISException.h",
      "includes/OISFactoryCreator.h",
      "includes/OISForceFeedback.h",
      "includes/OISInputManager.h",
      "includes/OISInterface.h",
      "includes/OISJoyStick.h",
      "includes/OISKeyboard.h",
      "includes/OISMouse.h",
      "includes/OISMultiTouch.h",
      "includes/OISObject.h",
      "includes/OISPrereqs.h",
      "includes/win32/Win32ForceFeedback.h",
      "includes/win32/Win32InputManager.h",
      "includes/win32/Win32JoyStick.h",
      "includes/win32/Win32KeyBoard.h",
      "includes/win32/Win32Mouse.h",
      "includes/win32/Win32Prereqs.h",
      "src/extras/LIRC/OISLIRC.h",
      "src/extras/LIRC/OISLIRCFactoryCreator.h",
      "src/extras/LIRC/OISLIRCRingBuffer.h",
      "src/win32/extras/WiiMote/OISWiiMote.h",
      "src/win32/extras/WiiMote/OISWiiMoteFactoryCreator.h",
      "src/win32/extras/WiiMote/OISWiiMoteForceFeedback.h",
      "src/win32/extras/WiiMote/OISWiiMoteRingBuffer.h",
      "src/win32/extras/WiiMote/hiddevice.h",
      "src/win32/extras/WiiMote/wiimote.h"
    } )

    vpaths { ["Platform Source"] = { "**.c", "**.cpp", "**.cs", "**.asm" } }
    files( {
      "src/OISEffect.cpp",
      "src/OISException.cpp",
      "src/OISForceFeedback.cpp",
      "src/OISInputManager.cpp",
      "src/OISJoyStick.cpp",
      "src/OISKeyboard.cpp",
      "src/OISObject.cpp",
      "src/extras/LIRC/OISLIRC.cpp",
      "src/extras/LIRC/OISLIRCFactoryCreator.cpp",
      "src/win32/Win32ForceFeedback.cpp",
      "src/win32/Win32InputManager.cpp",
      "src/win32/Win32JoyStick.cpp",
      "src/win32/Win32KeyBoard.cpp",
      "src/win32/Win32Mouse.cpp",
      "src/win32/extras/WiiMote/OISWiiMote.cpp",
      "src/win32/extras/WiiMote/OISWiiMoteFactoryCreator.cpp",
      "src/win32/extras/WiiMote/OISWiiMoteForceFeedback.cpp",
      "src/win32/extras/WiiMote/OISWiiMoteRingBuffer.cpp",
      "src/win32/extras/WiiMote/hiddevice.cpp",
      "src/win32/extras/WiiMote/main.cpp",
      "src/win32/extras/WiiMote/wiimote.cpp"
    } )



configuration( { "WIN64" } )
    vpaths { ["Platform Headers"] = { "**.h", "**.hpp", "**.hxx" } }
    files( {
      "includes/OIS.h",
      "includes/OISConfig.h",
      "includes/OISEffect.h",
      "includes/OISEvents.h",
      "includes/OISException.h",
      "includes/OISFactoryCreator.h",
      "includes/OISForceFeedback.h",
      "includes/OISInputManager.h",
      "includes/OISInterface.h",
      "includes/OISJoyStick.h",
      "includes/OISKeyboard.h",
      "includes/OISMouse.h",
      "includes/OISMultiTouch.h",
      "includes/OISObject.h",
      "includes/OISPrereqs.h",
      "src/extras/LIRC/OISLIRC.h",
      "src/extras/LIRC/OISLIRCFactoryCreator.h",
      "src/extras/LIRC/OISLIRCRingBuffer.h"
    } )

    vpaths { ["Platform Source"] = { "**.c", "**.cpp", "**.cs", "**.asm" } }
    files( {
      "src/OISEffect.cpp",
      "src/OISException.cpp",
      "src/OISForceFeedback.cpp",
      "src/OISInputManager.cpp",
      "src/OISJoyStick.cpp",
      "src/OISKeyboard.cpp",
      "src/OISObject.cpp",
      "src/extras/LIRC/OISLIRC.cpp",
      "src/extras/LIRC/OISLIRCFactoryCreator.cpp"
    } )


configuration( { "IOS" } )
includedirs( { "includes/iphone" } )

configuration( { "LINUX32" } )
includedirs( { "includes", "includes/linux", "src/extras/LIRC" } )

configuration( { "LINUX64" } )
includedirs( { "includes", "includes/linux", "src/extras/LIRC" } )

configuration( { "OSX" } )
includedirs( { "includes", "includes/mac", "src/extras/LIRC" } )

configuration( { "SDL" } )
includedirs( { "includes/SDL" } )

configuration( { "WIN32" } )
includedirs( { "#$#ENVVAR:DXSDK_DIR#$#/Include", "../external", "includes", "includes/win32", "src/extras/LIRC", "src/win32/extras/WiiMote" } )

configuration( { "WIN64" } )
includedirs( { "includes", "src/extras/LIRC" } )
