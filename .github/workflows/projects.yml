name: projects

on: repository_dispatch

jobs:

  GUCEF_exe_ArchiveDiff-linux32:
    if: github.event.client_payload.job == 'GUCEF_exe_ArchiveDiff-linux32'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build ArchiveDiff for platform linux32
        working-directory: ./projects/CMake/targets/GUCEF_exe_ArchiveDiff
        run: ./cmake --build
  GUCEF_exe_ArchiveDiff-linux64:
    if: github.event.client_payload.job == 'GUCEF_exe_ArchiveDiff-linux64'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build ArchiveDiff for platform linux64
        working-directory: ./projects/CMake/targets/GUCEF_exe_ArchiveDiff
        run: ./cmake --build
  GUCEF_exe_ArchiveDiff-win32:
    if: github.event.client_payload.job == 'GUCEF_exe_ArchiveDiff-win32'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build ArchiveDiff for platform win32
        working-directory: .\projects\CMake\targets\GUCEF_exe_ArchiveDiff
        run: ./cmake --build
  GUCEF_exe_ArchiveDiff-win64:
    if: github.event.client_payload.job == 'GUCEF_exe_ArchiveDiff-win64'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build ArchiveDiff for platform win64
        working-directory: .\projects\CMake\targets\GUCEF_exe_ArchiveDiff
        run: ./cmake --build
  GUCEF_exe_CMakeListGenerator-linux32:
    if: github.event.client_payload.job == 'GUCEF_exe_CMakeListGenerator-linux32'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build CMakeListGenerator for platform linux32
        working-directory: ./projects/CMake/targets/GUCEF_exe_CMakeListGenerator
        run: ./cmake --build
  GUCEF_exe_CMakeListGenerator-linux64:
    if: github.event.client_payload.job == 'GUCEF_exe_CMakeListGenerator-linux64'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build CMakeListGenerator for platform linux64
        working-directory: ./projects/CMake/targets/GUCEF_exe_CMakeListGenerator
        run: ./cmake --build
  GUCEF_exe_CMakeListGenerator-win32:
    if: github.event.client_payload.job == 'GUCEF_exe_CMakeListGenerator-win32'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build CMakeListGenerator for platform win32
        working-directory: .\projects\CMake\targets\GUCEF_exe_CMakeListGenerator
        run: ./cmake --build
  GUCEF_exe_CMakeListGenerator-win64:
    if: github.event.client_payload.job == 'GUCEF_exe_CMakeListGenerator-win64'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build CMakeListGenerator for platform win64
        working-directory: .\projects\CMake\targets\GUCEF_exe_CMakeListGenerator
        run: ./cmake --build
  GUCEF_exe_MemoryLeakFinder_TestApp-win32:
    if: github.event.client_payload.job == 'GUCEF_exe_MemoryLeakFinder_TestApp-win32'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build MemoryLeakFinder_TestApp for platform win32
        working-directory: .\projects\CMake\targets\GUCEF_exe_MemoryLeakFinder_TestApp
        run: ./cmake --build
  GUCEF_exe_MemoryLeakFinder_TestApp-win64:
    if: github.event.client_payload.job == 'GUCEF_exe_MemoryLeakFinder_TestApp-win64'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build MemoryLeakFinder_TestApp for platform win64
        working-directory: .\projects\CMake\targets\GUCEF_exe_MemoryLeakFinder_TestApp
        run: ./cmake --build
  GUCEF_exe_MyGUI.FontViewer-linux32:
    if: github.event.client_payload.job == 'GUCEF_exe_MyGUI.FontViewer-linux32'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build MyGUI.FontViewer for platform linux32
        working-directory: ./projects/CMake/targets/GUCEF_exe_MyGUI.FontViewer
        run: ./cmake --build
  GUCEF_exe_MyGUI.FontViewer-linux64:
    if: github.event.client_payload.job == 'GUCEF_exe_MyGUI.FontViewer-linux64'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build MyGUI.FontViewer for platform linux64
        working-directory: ./projects/CMake/targets/GUCEF_exe_MyGUI.FontViewer
        run: ./cmake --build
  GUCEF_exe_MyGUI.FontViewer-win32:
    if: github.event.client_payload.job == 'GUCEF_exe_MyGUI.FontViewer-win32'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build MyGUI.FontViewer for platform win32
        working-directory: .\projects\CMake\targets\GUCEF_exe_MyGUI.FontViewer
        run: ./cmake --build
  GUCEF_exe_MyGUI.FontViewer-win64:
    if: github.event.client_payload.job == 'GUCEF_exe_MyGUI.FontViewer-win64'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build MyGUI.FontViewer for platform win64
        working-directory: .\projects\CMake\targets\GUCEF_exe_MyGUI.FontViewer
        run: ./cmake --build
  GUCEF_exe_MyGUI.ImageSetViewer-linux32:
    if: github.event.client_payload.job == 'GUCEF_exe_MyGUI.ImageSetViewer-linux32'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build MyGUI.ImageSetViewer for platform linux32
        working-directory: ./projects/CMake/targets/GUCEF_exe_MyGUI.ImageSetViewer
        run: ./cmake --build
  GUCEF_exe_MyGUI.ImageSetViewer-linux64:
    if: github.event.client_payload.job == 'GUCEF_exe_MyGUI.ImageSetViewer-linux64'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build MyGUI.ImageSetViewer for platform linux64
        working-directory: ./projects/CMake/targets/GUCEF_exe_MyGUI.ImageSetViewer
        run: ./cmake --build
  GUCEF_exe_MyGUI.ImageSetViewer-win32:
    if: github.event.client_payload.job == 'GUCEF_exe_MyGUI.ImageSetViewer-win32'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build MyGUI.ImageSetViewer for platform win32
        working-directory: .\projects\CMake\targets\GUCEF_exe_MyGUI.ImageSetViewer
        run: ./cmake --build
  GUCEF_exe_MyGUI.ImageSetViewer-win64:
    if: github.event.client_payload.job == 'GUCEF_exe_MyGUI.ImageSetViewer-win64'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build MyGUI.ImageSetViewer for platform win64
        working-directory: .\projects\CMake\targets\GUCEF_exe_MyGUI.ImageSetViewer
        run: ./cmake --build
  GUCEF_exe_MyGUI.LayoutEditor-linux32:
    if: github.event.client_payload.job == 'GUCEF_exe_MyGUI.LayoutEditor-linux32'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build MyGUI.LayoutEditor for platform linux32
        working-directory: ./projects/CMake/targets/GUCEF_exe_MyGUI.LayoutEditor
        run: ./cmake --build
  GUCEF_exe_MyGUI.LayoutEditor-linux64:
    if: github.event.client_payload.job == 'GUCEF_exe_MyGUI.LayoutEditor-linux64'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build MyGUI.LayoutEditor for platform linux64
        working-directory: ./projects/CMake/targets/GUCEF_exe_MyGUI.LayoutEditor
        run: ./cmake --build
  GUCEF_exe_MyGUI.LayoutEditor-win32:
    if: github.event.client_payload.job == 'GUCEF_exe_MyGUI.LayoutEditor-win32'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build MyGUI.LayoutEditor for platform win32
        working-directory: .\projects\CMake\targets\GUCEF_exe_MyGUI.LayoutEditor
        run: ./cmake --build
  GUCEF_exe_MyGUI.LayoutEditor-win64:
    if: github.event.client_payload.job == 'GUCEF_exe_MyGUI.LayoutEditor-win64'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build MyGUI.LayoutEditor for platform win64
        working-directory: .\projects\CMake\targets\GUCEF_exe_MyGUI.LayoutEditor
        run: ./cmake --build
  GUCEF_exe_MyGUI.SkinEditor-linux32:
    if: github.event.client_payload.job == 'GUCEF_exe_MyGUI.SkinEditor-linux32'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build MyGUI.SkinEditor for platform linux32
        working-directory: ./projects/CMake/targets/GUCEF_exe_MyGUI.SkinEditor
        run: ./cmake --build
  GUCEF_exe_MyGUI.SkinEditor-linux64:
    if: github.event.client_payload.job == 'GUCEF_exe_MyGUI.SkinEditor-linux64'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build MyGUI.SkinEditor for platform linux64
        working-directory: ./projects/CMake/targets/GUCEF_exe_MyGUI.SkinEditor
        run: ./cmake --build
  GUCEF_exe_MyGUI.SkinEditor-win32:
    if: github.event.client_payload.job == 'GUCEF_exe_MyGUI.SkinEditor-win32'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build MyGUI.SkinEditor for platform win32
        working-directory: .\projects\CMake\targets\GUCEF_exe_MyGUI.SkinEditor
        run: ./cmake --build
  GUCEF_exe_MyGUI.SkinEditor-win64:
    if: github.event.client_payload.job == 'GUCEF_exe_MyGUI.SkinEditor-win64'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build MyGUI.SkinEditor for platform win64
        working-directory: .\projects\CMake\targets\GUCEF_exe_MyGUI.SkinEditor
        run: ./cmake --build
  GUCEF_exe_PatchSetGenerator-win32:
    if: github.event.client_payload.job == 'GUCEF_exe_PatchSetGenerator-win32'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build PatchSetGenerator for platform win32
        working-directory: .\projects\CMake\targets\GUCEF_exe_PatchSetGenerator
        run: ./cmake --build
  GUCEF_exe_PatchSetGenerator-win64:
    if: github.event.client_payload.job == 'GUCEF_exe_PatchSetGenerator-win64'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build PatchSetGenerator for platform win64
        working-directory: .\projects\CMake\targets\GUCEF_exe_PatchSetGenerator
        run: ./cmake --build
  GUCEF_exe_gucefCORE_TestApp-linux32:
    if: github.event.client_payload.job == 'GUCEF_exe_gucefCORE_TestApp-linux32'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build gucefCORE_TestApp for platform linux32
        working-directory: ./projects/CMake/targets/GUCEF_exe_gucefCORE_TestApp
        run: ./cmake --build
  GUCEF_exe_gucefCORE_TestApp-linux64:
    if: github.event.client_payload.job == 'GUCEF_exe_gucefCORE_TestApp-linux64'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build gucefCORE_TestApp for platform linux64
        working-directory: ./projects/CMake/targets/GUCEF_exe_gucefCORE_TestApp
        run: ./cmake --build
  GUCEF_exe_gucefCORE_TestApp-win32:
    if: github.event.client_payload.job == 'GUCEF_exe_gucefCORE_TestApp-win32'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build gucefCORE_TestApp for platform win32
        working-directory: .\projects\CMake\targets\GUCEF_exe_gucefCORE_TestApp
        run: ./cmake --build
  GUCEF_exe_gucefCORE_TestApp-win64:
    if: github.event.client_payload.job == 'GUCEF_exe_gucefCORE_TestApp-win64'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build gucefCORE_TestApp for platform win64
        working-directory: .\projects\CMake\targets\GUCEF_exe_gucefCORE_TestApp
        run: ./cmake --build
  GUCEF_exe_gucefGUI_TestApp-linux32:
    if: github.event.client_payload.job == 'GUCEF_exe_gucefGUI_TestApp-linux32'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build gucefGUI_TestApp for platform linux32
        working-directory: ./projects/CMake/targets/GUCEF_exe_gucefGUI_TestApp
        run: ./cmake --build
  GUCEF_exe_gucefGUI_TestApp-linux64:
    if: github.event.client_payload.job == 'GUCEF_exe_gucefGUI_TestApp-linux64'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build gucefGUI_TestApp for platform linux64
        working-directory: ./projects/CMake/targets/GUCEF_exe_gucefGUI_TestApp
        run: ./cmake --build
  GUCEF_exe_gucefGUI_TestApp-win32:
    if: github.event.client_payload.job == 'GUCEF_exe_gucefGUI_TestApp-win32'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build gucefGUI_TestApp for platform win32
        working-directory: .\projects\CMake\targets\GUCEF_exe_gucefGUI_TestApp
        run: ./cmake --build
  GUCEF_exe_gucefGUI_TestApp-win64:
    if: github.event.client_payload.job == 'GUCEF_exe_gucefGUI_TestApp-win64'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build gucefGUI_TestApp for platform win64
        working-directory: .\projects\CMake\targets\GUCEF_exe_gucefGUI_TestApp
        run: ./cmake --build
  GUCEF_exe_gucefIMAGE_TestApp-linux32:
    if: github.event.client_payload.job == 'GUCEF_exe_gucefIMAGE_TestApp-linux32'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build gucefIMAGE_TestApp for platform linux32
        working-directory: ./projects/CMake/targets/GUCEF_exe_gucefIMAGE_TestApp
        run: ./cmake --build
  GUCEF_exe_gucefIMAGE_TestApp-linux64:
    if: github.event.client_payload.job == 'GUCEF_exe_gucefIMAGE_TestApp-linux64'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build gucefIMAGE_TestApp for platform linux64
        working-directory: ./projects/CMake/targets/GUCEF_exe_gucefIMAGE_TestApp
        run: ./cmake --build
  GUCEF_exe_gucefIMAGE_TestApp-win32:
    if: github.event.client_payload.job == 'GUCEF_exe_gucefIMAGE_TestApp-win32'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build gucefIMAGE_TestApp for platform win32
        working-directory: .\projects\CMake\targets\GUCEF_exe_gucefIMAGE_TestApp
        run: ./cmake --build
  GUCEF_exe_gucefIMAGE_TestApp-win64:
    if: github.event.client_payload.job == 'GUCEF_exe_gucefIMAGE_TestApp-win64'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build gucefIMAGE_TestApp for platform win64
        working-directory: .\projects\CMake\targets\GUCEF_exe_gucefIMAGE_TestApp
        run: ./cmake --build
  GUCEF_exe_gucefINPUT_TestApp-linux32:
    if: github.event.client_payload.job == 'GUCEF_exe_gucefINPUT_TestApp-linux32'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build gucefINPUT_TestApp for platform linux32
        working-directory: ./projects/CMake/targets/GUCEF_exe_gucefINPUT_TestApp
        run: ./cmake --build
  GUCEF_exe_gucefINPUT_TestApp-linux64:
    if: github.event.client_payload.job == 'GUCEF_exe_gucefINPUT_TestApp-linux64'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build gucefINPUT_TestApp for platform linux64
        working-directory: ./projects/CMake/targets/GUCEF_exe_gucefINPUT_TestApp
        run: ./cmake --build
  GUCEF_exe_gucefINPUT_TestApp-win32:
    if: github.event.client_payload.job == 'GUCEF_exe_gucefINPUT_TestApp-win32'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build gucefINPUT_TestApp for platform win32
        working-directory: .\projects\CMake\targets\GUCEF_exe_gucefINPUT_TestApp
        run: ./cmake --build
  GUCEF_exe_gucefINPUT_TestApp-win64:
    if: github.event.client_payload.job == 'GUCEF_exe_gucefINPUT_TestApp-win64'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build gucefINPUT_TestApp for platform win64
        working-directory: .\projects\CMake\targets\GUCEF_exe_gucefINPUT_TestApp
        run: ./cmake --build
  GUCEF_exe_gucefVFS_TestApp-linux32:
    if: github.event.client_payload.job == 'GUCEF_exe_gucefVFS_TestApp-linux32'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build gucefVFS_TestApp for platform linux32
        working-directory: ./projects/CMake/targets/GUCEF_exe_gucefVFS_TestApp
        run: ./cmake --build
  GUCEF_exe_gucefVFS_TestApp-linux64:
    if: github.event.client_payload.job == 'GUCEF_exe_gucefVFS_TestApp-linux64'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build gucefVFS_TestApp for platform linux64
        working-directory: ./projects/CMake/targets/GUCEF_exe_gucefVFS_TestApp
        run: ./cmake --build
  GUCEF_exe_gucefVFS_TestApp-win32:
    if: github.event.client_payload.job == 'GUCEF_exe_gucefVFS_TestApp-win32'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build gucefVFS_TestApp for platform win32
        working-directory: .\projects\CMake\targets\GUCEF_exe_gucefVFS_TestApp
        run: ./cmake --build
  GUCEF_exe_gucefVFS_TestApp-win64:
    if: github.event.client_payload.job == 'GUCEF_exe_gucefVFS_TestApp-win64'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build gucefVFS_TestApp for platform win64
        working-directory: .\projects\CMake\targets\GUCEF_exe_gucefVFS_TestApp
        run: ./cmake --build
  GUCEF_exe_pubsub2storage-win32:
    if: github.event.client_payload.job == 'GUCEF_exe_pubsub2storage-win32'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build pubsub2storage for platform win32
        working-directory: .\projects\CMake\targets\GUCEF_exe_pubsub2storage
        run: ./cmake --build
  GUCEF_exe_pubsub2storage-win64:
    if: github.event.client_payload.job == 'GUCEF_exe_pubsub2storage-win64'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build pubsub2storage for platform win64
        working-directory: .\projects\CMake\targets\GUCEF_exe_pubsub2storage
        run: ./cmake --build
  GUCEF_tag_obsolete-linux32:
    if: github.event.client_payload.job == 'GUCEF_tag_obsolete-linux32'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build GUCEF_tag_obsolete for platform linux32
        working-directory: ./projects/CMake/targets/GUCEF_tag_obsolete
        run: ./cmake --build
  GUCEF_tag_obsolete-linux64:
    if: github.event.client_payload.job == 'GUCEF_tag_obsolete-linux64'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build GUCEF_tag_obsolete for platform linux64
        working-directory: ./projects/CMake/targets/GUCEF_tag_obsolete
        run: ./cmake --build
  GUCEF_tag_obsolete-win32:
    if: github.event.client_payload.job == 'GUCEF_tag_obsolete-win32'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build GUCEF_tag_obsolete for platform win32
        working-directory: .\projects\CMake\targets\GUCEF_tag_obsolete
        run: ./cmake --build
  GUCEF_tag_obsolete-win64:
    if: github.event.client_payload.job == 'GUCEF_tag_obsolete-win64'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build GUCEF_tag_obsolete for platform win64
        working-directory: .\projects\CMake\targets\GUCEF_tag_obsolete
        run: ./cmake --build
  GUCEF_tag_plugin-linux32:
    if: github.event.client_payload.job == 'GUCEF_tag_plugin-linux32'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build GUCEF_tag_plugin for platform linux32
        working-directory: ./projects/CMake/targets/GUCEF_tag_plugin
        run: ./cmake --build
  GUCEF_tag_plugin-linux64:
    if: github.event.client_payload.job == 'GUCEF_tag_plugin-linux64'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build GUCEF_tag_plugin for platform linux64
        working-directory: ./projects/CMake/targets/GUCEF_tag_plugin
        run: ./cmake --build
  GUCEF_tag_plugin-win32:
    if: github.event.client_payload.job == 'GUCEF_tag_plugin-win32'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build GUCEF_tag_plugin for platform win32
        working-directory: .\projects\CMake\targets\GUCEF_tag_plugin
        run: ./cmake --build
  GUCEF_tag_plugin-win64:
    if: github.event.client_payload.job == 'GUCEF_tag_plugin-win64'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build GUCEF_tag_plugin for platform win64
        working-directory: .\projects\CMake\targets\GUCEF_tag_plugin
        run: ./cmake --build
  GUCEF_tag_test-linux32:
    if: github.event.client_payload.job == 'GUCEF_tag_test-linux32'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build GUCEF_tag_test for platform linux32
        working-directory: ./projects/CMake/targets/GUCEF_tag_test
        run: ./cmake --build
  GUCEF_tag_test-linux64:
    if: github.event.client_payload.job == 'GUCEF_tag_test-linux64'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build GUCEF_tag_test for platform linux64
        working-directory: ./projects/CMake/targets/GUCEF_tag_test
        run: ./cmake --build
  GUCEF_tag_test-win32:
    if: github.event.client_payload.job == 'GUCEF_tag_test-win32'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build GUCEF_tag_test for platform win32
        working-directory: .\projects\CMake\targets\GUCEF_tag_test
        run: ./cmake --build
  GUCEF_tag_test-win64:
    if: github.event.client_payload.job == 'GUCEF_tag_test-win64'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build GUCEF_tag_test for platform win64
        working-directory: .\projects\CMake\targets\GUCEF_tag_test
        run: ./cmake --build
