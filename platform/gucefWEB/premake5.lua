--------------------------------------------------------------------
-- This file was automatically generated by ProjectGenerator
-- which is tooling part the build system designed for GUCEF
--     (Galaxy Unlimited Framework)
-- For the latest info, see http://www.VanvelzenSoftware.com/
--
-- The contents of this file are placed in the public domain. Feel
-- free to make use of it in any way you like.
--------------------------------------------------------------------
--

-- Configuration for module: gucefWEB


project( "gucefWEB" )

configuration( {} )
  location( os.getenv( "PM5OUTPUTDIR" ) )

configuration( {} )
  targetdir( os.getenv( "PM5TARGETDIR" ) )

configuration( {} )
language( "C++" )



configuration( {} )
kind( "SharedLib" )

configuration( {} )
links( { "gucefCOM", "gucefCOMCORE", "gucefCORE", "gucefMT", "gucefVFS" } )
links( { "gucefCOM", "gucefCOMCORE", "gucefCORE", "gucefMT", "gucefVFS" } )


configuration( {} )
defines( { "GUCEF_WEB_BUILD_MODULE" } )


configuration( {} )
vpaths { ["Headers"] = { "**.h", "**.hpp", "**.hxx" } }
files( {
  "include/gucefWEB.h",
  "include/gucefWEB_CAsyncHttpServerRequestHandler.h",
  "include/gucefWEB_CAsyncHttpServerResponseHandler.h",
  "include/gucefWEB_CCodecBasedHTTPServerResource.h",
  "include/gucefWEB_CConfigurableHttpServerResource.h",
  "include/gucefWEB_CDefaultHTTPServerResource.h",
  "include/gucefWEB_CDefaultHTTPServerRouter.h",
  "include/gucefWEB_CDefaultHTTPServerRouterController.h",
  "include/gucefWEB_CDefaultHttpServerRequestHandler.h",
  "include/gucefWEB_CDummyHTTPServerResource.h",
  "include/gucefWEB_CGlobalHttpCodecLinks.h",
  "include/gucefWEB_CHTTPClient.h",
  "include/gucefWEB_CHTTPServer.h",
  "include/gucefWEB_CHTTPURLHandler.h",
  "include/gucefWEB_CHttpCodecLinks.h",
  "include/gucefWEB_CHttpEncodingTypes.h",
  "include/gucefWEB_CHttpMimeTypes.h",
  "include/gucefWEB_CHttpRequestData.h",
  "include/gucefWEB_CHttpResponseData.h",
  "include/gucefWEB_CIHTTPServerResource.h",
  "include/gucefWEB_CIHTTPServerRouter.h",
  "include/gucefWEB_CIHTTPServerRouterController.h",
  "include/gucefWEB_CIHttpServerRequestHandler.h",
  "include/gucefWEB_CModule.h",
  "include/gucefWEB_CTConfigurableMapHttpServerResource.h",
  "include/gucefWEB_CWebGlobal.h",
  "include/gucefWEB_ETypes.h",
  "include/gucefWEB_HTTPCode.h",
  "include/gucefWEB_config.h",
  "include/gucefWEB_macros.h"
 } )



configuration( {} )
vpaths { ["Source"] = { "**.c", "**.cpp", "**.cs", "**.asm" } }
files( {
  "src/gucefWEB.cpp",
  "src/gucefWEB_CAsyncHttpServerRequestHandler.cpp",
  "src/gucefWEB_CAsyncHttpServerResponseHandler.cpp",
  "src/gucefWEB_CCodecBasedHTTPServerResource.cpp",
  "src/gucefWEB_CConfigurableHttpServerResource.cpp",
  "src/gucefWEB_CDefaultHTTPServerResource.cpp",
  "src/gucefWEB_CDefaultHTTPServerRouter.cpp",
  "src/gucefWEB_CDefaultHTTPServerRouterController.cpp",
  "src/gucefWEB_CDefaultHttpServerRequestHandler.cpp",
  "src/gucefWEB_CDummyHTTPServerResource.cpp",
  "src/gucefWEB_CGlobalHttpCodecLinks.cpp",
  "src/gucefWEB_CHTTPClient.cpp",
  "src/gucefWEB_CHTTPServer.cpp",
  "src/gucefWEB_CHTTPURLHandler.cpp",
  "src/gucefWEB_CHttpCodecLinks.cpp",
  "src/gucefWEB_CHttpEncodingTypes.cpp",
  "src/gucefWEB_CHttpMimeTypes.cpp",
  "src/gucefWEB_CHttpRequestData.cpp",
  "src/gucefWEB_CHttpResponseData.cpp",
  "src/gucefWEB_CIHTTPServerResource.cpp",
  "src/gucefWEB_CIHTTPServerRouter.cpp",
  "src/gucefWEB_CIHTTPServerRouterController.cpp",
  "src/gucefWEB_CIHttpServerRequestHandler.cpp",
  "src/gucefWEB_CModule.cpp",
  "src/gucefWEB_CWebGlobal.cpp"
 } )


configuration( {} )
includedirs( { "../../common/include", "../gucefCOM/include", "../gucefCOMCORE/include", "../gucefCORE/include", "../gucefMT/include", "../gucefVFS/include", "include" } )

configuration( { "ANDROID" } )
includedirs( { "../gucefCORE/include/android" } )

configuration( { "LINUX32" } )
includedirs( { "../gucefCORE/include/linux" } )

configuration( { "LINUX64" } )
includedirs( { "../gucefCORE/include/linux" } )

configuration( { "WIN32" } )
includedirs( { "../gucefCOMCORE/include/mswin", "../gucefCORE/include/mswin" } )

configuration( { "WIN64" } )
includedirs( { "../gucefCOMCORE/include/mswin", "../gucefCORE/include/mswin" } )
