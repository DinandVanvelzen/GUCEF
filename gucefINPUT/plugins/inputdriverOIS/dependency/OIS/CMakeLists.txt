#-------------------------------------------------------------------
# This file is part of the CMake build system for GUCEF
#     (Galaxy Unlimited Framework)
# For the latest info, see http://www.VanvelzenSoftware.com/
#
# The contents of this file are placed in the public domain. Feel
# free to make use of it in any way you like.
#-------------------------------------------------------------------

#
# THIS FILE IS AUTOMATICALLY GENERATED BY CMAKELISTGENERATOR
#
# CMAKELISTGENERATOR was compiled on: May 22 2010 @ 21:00:10
#
#
#
# -- Basic CMake concepts:
#      CMAKE_MODULE_PATH
#      – Path to where the CMake modules are located
#      CMAKE_INSTALL_PREFIX
#      – Where to put files when calling 'make install'
#      CMAKE_BUILD_TYPE
#      – Type of build (Debug, Release, ...)
#      BUILD_SHARED_LIBS
#      – Switch between shared and static libraries

# Configure OIS

set(HEADER_FILES 
  includes/OIS.h
  includes/OISConfig.h
  includes/OISEffect.h
  includes/OISEvents.h
  includes/OISException.h
  includes/OISFactoryCreator.h
  includes/OISForceFeedback.h
  includes/OISInputManager.h
  includes/OISInterface.h
  includes/OISJoyStick.h
  includes/OISKeyboard.h
  includes/OISMouse.h
  includes/OISObject.h
  includes/OISPrereqs.h
  src/extras/LIRC/OISLIRC.h
  src/extras/LIRC/OISLIRCFactoryCreator.h
  src/extras/LIRC/OISLIRCRingBuffer.h
)

set(SOURCE_FILES 
  src/OISEffect.cpp
  src/OISException.cpp
  src/OISForceFeedback.cpp
  src/OISInputManager.cpp
  src/OISJoyStick.cpp
  src/OISKeyboard.cpp
  src/OISObject.cpp
  src/extras/LIRC/OISLIRC.cpp
  src/extras/LIRC/OISLIRCFactoryCreator.cpp
)



if (OSX)
  set( PLATFORM_HEADER_FILES 
    includes/mac/MacHelpers.h
    includes/mac/MacHIDManager.h
    includes/mac/MacInputManager.h
    includes/mac/MacKeyboard.h
    includes/mac/MacMouse.h
    includes/mac/MacPrereqs.h
  )

  set( PLATFORM_HEADER_INSTALL "OSX" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    src/mac/MacHelpers.cpp
    src/mac/MacHIDManager.cpp
    src/mac/MacInputManager.cpp
    src/mac/MacKeyboard.cpp
    src/mac/MacMouse.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "OSX" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (SDL)
  set( PLATFORM_HEADER_FILES 
    includes/sdl/SDLInputManager.h
    includes/sdl/SDLJoyStick.h
    includes/sdl/SDLKeyboard.h
    includes/sdl/SDLMouse.h
    includes/sdl/SDLPrereqs.h
  )

  set( PLATFORM_HEADER_INSTALL "SDL" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    src/sdl/SDLInputManager.cpp
    src/sdl/SDLJoyStick.cpp
    src/sdl/SDLKeyboard.cpp
    src/sdl/SDLMouse.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "SDL" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (UNIX)
  set( PLATFORM_HEADER_FILES 
    includes/linux/EventHelpers.h
    includes/linux/LinuxForceFeedback.h
    includes/linux/LinuxInputManager.h
    includes/linux/LinuxJoyStickEvents.h
    includes/linux/LinuxKeyboard.h
    includes/linux/LinuxMouse.h
    includes/linux/LinuxPrereqs.h
  )

  set( PLATFORM_HEADER_INSTALL "UNIX" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    src/linux/EventHelpers.cpp
    src/linux/LinuxForceFeedback.cpp
    src/linux/LinuxInputManager.cpp
    src/linux/LinuxJoyStickEvents.cpp
    src/linux/LinuxKeyboard.cpp
    src/linux/LinuxMouse.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "UNIX" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

elseif (WIN32)
  set( PLATFORM_HEADER_FILES 
    includes/win32/Win32ForceFeedback.h
    includes/win32/Win32InputManager.h
    includes/win32/Win32JoyStick.h
    includes/win32/Win32KeyBoard.h
    includes/win32/Win32Mouse.h
    includes/win32/Win32Prereqs.h
  )

  set( PLATFORM_HEADER_INSTALL "WIN32" )
  source_group( "Platform Header Files" FILES ${PLATFORM_HEADER_FILES} )

  set( PLATFORM_SOURCE_FILES 
    src/win32/Win32ForceFeedback.cpp
    src/win32/Win32InputManager.cpp
    src/win32/Win32JoyStick.cpp
    src/win32/Win32KeyBoard.cpp
    src/win32/Win32Mouse.cpp
  )

  set( PLATFORM_SOURCE_INSTALL "WIN32" )
  source_group( "Platform Source Files" FILES ${PLATFORM_SOURCE_FILES} )

endif ()

# For ease of use make a variable that has all files for this module
set( ALL_FILES ${HEADER_FILES} ${SOURCE_FILES} ${PLATFORM_HEADER_FILES} ${PLATFORM_SOURCE_FILES} )




#******** END OF AUTOGENERATED CONTENT ********



add_library( OIS ${ALL_FILES} )

if (WIN32)
  # platform define is auto detected for win32
  set_target_properties( OIS PROPERTIES COMPILE_DEFINITIONS "OIS_DYNAMIC_LIB;OIS_NONCLIENT_BUILD" )
  target_link_libraries( OIS dinput8.lib dxguid.lib )
elseif (OSX)
  set_target_properties( OIS PROPERTIES COMPILE_DEFINITIONS "OIS_DYNAMIC_LIB;OIS_NONCLIENT_BUILD;OIS_APPLE_PLATFORM" )
elseif (UNIX)
  set_target_properties( OIS PROPERTIES COMPILE_DEFINITIONS "OIS_DYNAMIC_LIB;OIS_NONCLIENT_BUILD;OIS_LINUX_PLATFORM" )
else ()
  set_target_properties( OIS PROPERTIES COMPILE_DEFINITIONS "OIS_DYNAMIC_LIB;OIS_NONCLIENT_BUILD;OIS_SDL_PLATFORM" )
endif ()


GUCEF_config_plugin( OIS )


#******** START OF AUTOGENERATED CONTENT ********



include_directories( includes src/extras/LIRC )

if ( OSX )
  include_directories( includes/mac )
endif( OSX )

if ( SDL )
  include_directories( includes/sdl )
endif( SDL )

if ( UNIX )
  include_directories( includes/linux )
endif( UNIX )

if ( WIN32 )
  include_directories( includes/win32 )
endif( WIN32 )



#******** END OF AUTOGENERATED CONTENT ********


# Generator logfile can be found at: C:\Dev\GUALL\GUCEF\trunk\common\bin\MVC9\bin\Debug\CMakeListsGenerator_Log.txt