// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

import (
	"github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"
	"bytes"
	"io"
)

type GucefPubsubMsgcontainerFooter struct {
	MsgOffsetIdx []uint32
	MsgOffsetIdxSize uint32
	MagicText []byte
	_io *kaitai.Stream
	_root *GucefPubsubMsgcontainerFooter
	_parent interface{}
	_f_mois bool
	mois uint32
}
func NewGucefPubsubMsgcontainerFooter() *GucefPubsubMsgcontainerFooter {
	return &GucefPubsubMsgcontainerFooter{
	}
}

func (this *GucefPubsubMsgcontainerFooter) Read(io *kaitai.Stream, parent interface{}, root *GucefPubsubMsgcontainerFooter) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp1, err := this.Mois()
	if err != nil {
		return err
	}
	for i := 0; i < int(tmp1); i++ {
		_ = i
		tmp2, err := this._io.ReadU4le()
		if err != nil {
			return err
		}
		this.MsgOffsetIdx = append(this.MsgOffsetIdx, tmp2)
	}
	tmp3, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.MsgOffsetIdxSize = uint32(tmp3)
	tmp4, err := this._io.ReadBytes(int(10))
	if err != nil {
		return err
	}
	tmp4 = tmp4
	this.MagicText = tmp4
	if !(bytes.Equal(this.MagicText, []uint8{80, 85, 66, 83, 85, 66, 77, 83, 71, 83})) {
		return kaitai.NewValidationNotEqualError([]uint8{80, 85, 66, 83, 85, 66, 77, 83, 71, 83}, this.MagicText, this._io, "/seq/2")
	}
	return err
}
func (this *GucefPubsubMsgcontainerFooter) Mois() (v uint32, err error) {
	if (this._f_mois) {
		return this.mois, nil
	}
	_pos, err := this._io.Pos()
	if err != nil {
		return 0, err
	}
	tmp5, err := this._io.Size()
	if err != nil {
		return 0, err
	}
	_, err = this._io.Seek(int64((tmp5 - 14)), io.SeekStart)
	if err != nil {
		return 0, err
	}
	tmp6, err := this._io.ReadU4le()
	if err != nil {
		return 0, err
	}
	this.mois = tmp6
	_, err = this._io.Seek(_pos, io.SeekStart)
	if err != nil {
		return 0, err
	}
	this._f_mois = true
	this._f_mois = true
	return this.mois, nil
}
